<div class="w-990">
<p id="unifypromptone" style="display:none"> </p>
<div class="polysemy">
<h3>“<b>JAVA</b>”是个多义词，全部含义如下：
				   </h3>
<span class="r grayc"><a class="ambiguityCorrectionNew" href="#" onclick="polysemycheck();">纠错</a> | <a class="add" href="#" onclick="polysemycheck();" style="cursor:pointer">编辑多义词</a></span>
<ul id="polysemyAll" style="display:block">
<li><a href="//www.baike.com/wiki/java%5B%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%5D" target="_blank">计算机编程语言</a></li>
<li class="current"><strong>JAVA开发</strong></li>
<li><a href="//www.baike.com/wiki/java%5B%E6%84%8F%E5%A4%A7%E5%88%A9%E8%87%AA%E8%A1%8C%E8%BD%A6%E5%93%81%E7%89%8C%5D" target="_blank">意大利自行车品牌</a></li>
</ul>
<input id="doctitle_polysemy" name="doctitle_polysemy" type="hidden" value="JAVA"/>
</div>
<div class="polysemy industry" id="personal_polysemy" style="display:none"></div>
<div class="l w-640">
<div id="place_div"><div class="mainnav-l"><ul class="l">
<li><span class="noback"></span><a class="btn-editdoc" href="/editdocauth/JAVA%5BJAVA%E5%BC%80%E5%8F%91%5D" onclick="return editdoc();">编辑</a>
</li>
<li><a class="discuss" href="javascript:void(0)">讨论</a></li>
<li class="hide" id="sha">
<a class="share" href="javascript:void(0)">分享</a><em></em>
<div class="d-list" id="share" name="div_fun_kmod"><p><a class="sinaminblog" href="#"><em></em>新浪微博</a>
<a class="weixin" href="#"><em></em>微信
					<span class="qrcode"><img class="img" src="//a7.baike.com/2E/95/2E95C586A97D2B97873869872DA5C9BF_90.png?title=JAVA%5BJAVA%E5%BC%80%E5%8F%91%5D"/>扫描二维码用<i>手机</i>浏览词条</span></a>
<a class="xinzhishe" href="#" id="xinzhisheshare2"> <em></em>新知社</a><a class="qqzone" href="#"> <em></em>QQ空间</a></p></div>
</li>
<li><a class="digg" href="javascript:void(0)">0</a></li>
</ul></div></div>
<div id="hd_ad_doc_7"> </div>
<div class="edit-kz" id="doc_mission_view"></div>
<div class="clear"></div>
<div class="content-h1"><h1>JAVA[JAVA开发]</h1></div>
<div class="clear"></div>
<div class="place">
<p id="openCatp" style="display:none">开放分类：<a href="//fenlei.baike.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/?prd=zhengwenye_left_kaifangfenlei" target="_blank" title="计算机语言">计算机语言</a></p>
</div>
<div class="clear"></div>
<div class="information" id="unifyprompt"><div class="summary" id="anchor" name="anchor"><p>Java是一种可以撰写跨平台应用软件的<a href="http://www.baike.com/wiki/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1" target="_blank">面向对象</a>的<a href="http://www.baike.com/wiki/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%AD%E8%A8%80" target="_blank">程序设计语言</a>，是由<a href="http://www.baike.com/wiki/Sun+Microsystems%E5%85%AC%E5%8F%B8" target="_blank">Sun Microsystems公司</a>于1995年5月推出的Java程序设计语言和<a href="http://www.baike.com/wiki/Java%E5%B9%B3%E5%8F%B0" target="_blank">Java平台</a>（即JavaEE, JavaME, JavaSE）的总称。Java自面世后就非常流行，发展迅速，对<a href="http://www.baike.com/wiki/C%2B%2B%E8%AF%AD%E8%A8%80" target="_blank">C++语言</a>形成了有力冲击。Java技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于个人<a href="http://www.baike.com/wiki/PC" target="_blank">PC</a>、数据中心、游戏控制台、科学超级计算机、移动电话和互联网，同时拥有全球最大的开发者专业社群。在全球<a href="http://www.baike.com/wiki/%E4%BA%91%E8%AE%A1%E7%AE%97" target="_blank">云计算</a>和<a href="http://www.baike.com/wiki/%E7%A7%BB%E5%8A%A8%E4%BA%92%E8%81%94%E7%BD%91" target="_blank">移动互联网</a>的产业环境下，Java更具备了显著优势和广阔前景。Java是目前世界上流行的计算机编程语言，是一种可以撰写跨平台应用软件的面向对象的程序设计语言。全球有25亿Java器运行着Java，450多万Java开发者活跃在地球的每个角落，数以千万计的Web<a href="http://www.baike.com/wiki/%E7%94%A8%E6%88%B7" target="_blank">用户</a>每次上网都亲历Java的威力。</p><span><a action="editsummaryhref" href="javascript:void(0);" onclick="editSummary();return false;">编辑摘要</a></span>
</div></div>
<input id="doctitle" name="doctitle" type="hidden" value="JAVA[JAVA开发]"/><div id="hd_ad_doc_109"> </div>
<div appcode="datamodule" id="datamodule" name="datamodule">
<div class="module zoom">
<h2 class="h2-title">基本信息
        <a class="bjbd" href="javascript:void(0);" onclick="perfectinfotempletdata('science_program')">编辑信息模块</a>
</h2>
<table><tr>
<td>
<strong>发明人：</strong>
<span>詹姆斯·高斯林</span>
</td>
<td class="jg"></td>
<td>
<strong>相关语言：</strong>
<span>C语言、C++</span>
</td> </tr> <tr>
<td>
<strong>所属组织：</strong>
<span>Sun Microsystems（已被甲骨文收购）</span>
</td>
<td class="jg"></td>
<td>
<strong>开发工具：</strong>
<span>OpenJDK, HotSpot</span>
</td> </tr> <tr>
<td>
<strong>发布协议：</strong>
<span>免费开源协议</span>
</td>
<td class="jg"></td>
<td>
<strong>推出时间：</strong>
<span>1995年5月</span>
</td> </tr> <tr>
<td>
<strong>开发公司：</strong>
<span>Sun Microsystems</span>
</td>
<td class="jg"></td>
<td>
<strong>现公司：</strong>
<span>Oracle（收购了Sun公司）</span>
</td> </tr> <tr>
<td>
<strong>英文名：</strong>
<span>Java</span>
</td> <td class="jg"></td><td></td></tr>
</table>
</div>
<div class="module zoom">
<table><tr>
<td>
<strong>官方网站：</strong>
<span>http://www.java.com/zh_CN/</span>
</td> <td class="jg"></td><td></td></tr>
</table>
</div>
</div>
<div appcode="ZxZzyCPGL">
<link href="http://www.huimg.cn/hudong/entry/widget/renzheng/css/qy-product20180420.css" rel="stylesheet"/>
<script src="http://www.huimg.cn/zhixiao/manufacture/zxManufactureCPGL.js" type="text/javascript"></script>
<div appcode="zhixiao">
<div class="rz-product2">
<h2 class="h2-title">产品概览</h2>
<div class="rzProduct-photo">
<p class="show" id="zx_zzy_cpgl_top_pic"><a href="http://www.zjoracle.com" target="_blank"><img src="http://static.hudong.com/07/15/26100000011122154216159245456.jpg"/></a></p>
<p class="list" id="zx_zzy_cpgl_pics">
<span class="current">
<img alt="" data-link="http://www.zjoracle.com" src="http://static.hudong.com/07/15/26100000011122154216159245456.jpg"/>
</span>
<span>
<img alt="" data-link="http://www.zjoracle.com" src="http://static.hudong.com/75/17/26100000011122154216170219161.jpg"/>
</span>
<span>
<img alt="" data-link="http://www.zjoracle.com" src="http://static.hudong.com/27/17/26100000011122154216170648017.jpg"/>
</span>
<span>
<img alt="" data-link="http://www.zjoracle.com" src="http://static.hudong.com/88/17/26100000011122154216171458804.jpg"/>
</span>
<span>
<img alt="" data-link="http://www.zjoracle.com" src="http://static.hudong.com/48/17/26100000011122154216171868070.jpg"/>
</span>
</p>
</div>
<div class="rzProduct-info">
<h4 class="name">杭州Java培训精品课程</h4>
<ul class="attr">
<li><span class="col-l">型号</span><p>天眼甲骨文</p></li>
<li><span class="col-l">品牌</span><p><a href="http://qiye.baike.com/wiki/杭州天眼教育咨询有限公司" target="_blank">杭州天眼教育咨询有限公司</a></p></li>
<li><span class="col-l">价格</span><p>面谈</p></li>
<li class="top-line"><span class="col-l">备注</span><p>oracle原厂课程，金牌教师授课，小班教学 ，试听2周，推荐高薪就业，入学签订就业协议，电话：4009939391</p></li>
</ul>
</div>
<i class="gg-ico"></i>
</div>
</div></div>
<fieldset id="catalog">
<div class="toctitle"><h3>目录</h3></div>
<div id="full-all">
<ul class="lie4">
<li>
<em>1</em><a alt=" 背景" catalogkey="1" class="bold" href="javascript:void(0)" title=" 背景">背景</a>
</li>
<li>
<em>2</em><a alt="组成" catalogkey="3" class="bold" href="javascript:void(0)" title="组成">组成</a>
</li>
<li>
<em>3</em><a alt="优势" catalogkey="5" class="bold" href="javascript:void(0)" title="优势">优势</a>
</li>
<li>
<em>4</em><a alt="概述" catalogkey="7" class="bold" href="javascript:void(0)" title="概述">概述</a>
</li>
<li>
<em>5</em><a alt="名字由来" catalogkey="9" class="bold" href="javascript:void(0)" title="名字由来">名字由来</a>
</li>
<li>
<em>6</em><a alt="历史" catalogkey="11" class="bold" href="javascript:void(0)" title="历史">历史</a>
</li>
</ul>
<ul class="lie4">
<li>
<em>7</em><a alt="Java主要特性" catalogkey="13" class="bold" href="javascript:void(0)" title="Java主要特性">Java主要特性</a>
</li>
<li>
<em>8</em><a alt="Java语言特点" catalogkey="15" class="bold" href="javascript:void(0)" title="Java语言特点">Java语言特点</a>
</li>
<li class="dot"><a alt="开发技巧" catalogkey="17" href="javascript:void(0)" title="开发技巧">开发技巧</a></li>
<li>
<em>9</em><a alt="Java 5.0的特性" catalogkey="19" class="bold" href="javascript:void(0)" title="Java 5.0的特性">Java5.0的特性</a>
</li>
<li>
<em>10</em><a alt="深入JAVA" catalogkey="21" class="bold" href="javascript:void(0)" title="深入JAVA">深入JAVA</a>
</li>
<li>
<em>11</em><a alt="关于Java的批评" catalogkey="23" class="bold" href="javascript:void(0)" title="关于Java的批评">关于Java的批评</a>
</li>
</ul>
<ul class="lie4">
<li>
<em>12</em><a alt="Java运行时环境" catalogkey="25" class="bold" href="javascript:void(0)" title="Java运行时环境">Java运行时环境</a>
</li>
<li>
<em>13</em><a alt="扩展和相关架构" catalogkey="27" class="bold" href="javascript:void(0)" title="扩展和相关架构">扩展和相关架构</a>
</li>
<li>
<em>14</em><a alt="相关技术" catalogkey="29" class="bold" href="javascript:void(0)" title="相关技术">相关技术</a>
</li>
<li>
<em>15</em><a alt="java开源项目" catalogkey="31" class="bold" href="javascript:void(0)" title="java开源项目">java开源项目</a>
</li>
<li>
<em>16</em><a alt="实战应用" catalogkey="33" class="bold" href="javascript:void(0)" title="实战应用">实战应用</a>
</li>
<li>
<em>17</em><a alt="java模拟器" catalogkey="35" class="bold" href="javascript:void(0)" title="java模拟器">java模拟器</a>
</li>
</ul>
<ul class="lie4">
<li>
<em>18</em><a alt="java学习书籍" catalogkey="37" class="bold" href="javascript:void(0)" title="java学习书籍">java学习书籍</a>
</li>
<li>
<em>19</em><a alt="参见" catalogkey="39" class="bold" href="javascript:void(0)" title="参见">参见</a>
</li>
<li>
<em>20</em><a alt="参考文献" catalogkey="41" class="bold" href="javascript:void(0)" title="参考文献">参考文献</a>
</li>
<li>
<em>21</em><a alt="其他应用" catalogkey="43" class="bold" href="javascript:void(0)" title="其他应用">其他应用</a>
</li>
</ul>
</div>
<div class="bot-bg"></div>
</fieldset>
<div id="float_section" style="display:none;">
<div class="catalog">
<div class="full-list">
<ul>
<li>
<em>1</em><a catalogkey="1" class="bold" href="javascript:void(0)">背景</a>
<i></i>
</li>
<li>
<em>2</em><a catalogkey="3" class="bold" href="javascript:void(0)">组成</a>
<i></i>
</li>
<li>
<em>3</em><a catalogkey="5" class="bold" href="javascript:void(0)">优势</a>
<i></i>
</li>
<li>
<em>4</em><a catalogkey="7" class="bold" href="javascript:void(0)">概述</a>
<i></i>
</li>
<li>
<em>5</em><a catalogkey="9" class="bold" href="javascript:void(0)">名字由来</a>
<i></i>
</li>
<li>
<em>6</em><a catalogkey="11" class="bold" href="javascript:void(0)">历史</a>
<i></i>
</li>
<li>
<em>7</em><a catalogkey="13" class="bold" href="javascript:void(0)">Java主要特性</a>
<i></i>
</li>
<li>
<em>8</em><a catalogkey="15" class="bold" href="javascript:void(0)">Java语言特点</a>
<i></i>
</li>
<li class="dot">
<em>8.1</em><a catalogkey="17" href="javascript:void(0)">开发技巧</a>
</li>
<li>
<em>9</em><a catalogkey="19" class="bold" href="javascript:void(0)">Java5.0的特性</a>
<i></i>
</li>
<li>
<em>10</em><a catalogkey="21" class="bold" href="javascript:void(0)">深入JAVA</a>
<i></i>
</li>
<li>
<em>11</em><a catalogkey="23" class="bold" href="javascript:void(0)">关于Java的批评</a>
<i></i>
</li>
<li>
<em>12</em><a catalogkey="25" class="bold" href="javascript:void(0)">Java运行时环境</a>
<i></i>
</li>
<li>
<em>13</em><a catalogkey="27" class="bold" href="javascript:void(0)">扩展和相关架构</a>
<i></i>
</li>
<li>
<em>14</em><a catalogkey="29" class="bold" href="javascript:void(0)">相关技术</a>
<i></i>
</li>
<li>
<em>15</em><a catalogkey="31" class="bold" href="javascript:void(0)">java开源项目</a>
<i></i>
</li>
<li>
<em>16</em><a catalogkey="33" class="bold" href="javascript:void(0)">实战应用</a>
<i></i>
</li>
<li>
<em>17</em><a catalogkey="35" class="bold" href="javascript:void(0)">java模拟器</a>
<i></i>
</li>
<li>
<em>18</em><a catalogkey="37" class="bold" href="javascript:void(0)">java学习书籍</a>
<i></i>
</li>
<li>
<em>19</em><a catalogkey="39" class="bold" href="javascript:void(0)">参见</a>
<i></i>
</li>
<li>
<em>20</em><a catalogkey="41" class="bold" href="javascript:void(0)">参考文献</a>
<i></i>
</li>
<li>
<em>21</em><a catalogkey="43" class="bold" href="javascript:void(0)">其他应用</a>
<i></i>
</li>
</ul>
</div>
</div>
<a class="topcontrol" href="#"></a>
<a class="toollist" href="#"></a>
</div>
<!--google_ad_section_start-->
<div id="content">
<div class="content_h2 bac_no">
<h2 class="mar-t10">
<a name="1"> </a> 背景<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="1" target="_self">编辑</a>
</h2>
</div>
<div class="img img_r" id="changeTheId-wrap-img-29" style="width:300px;"><a href="http://tupian.baike.com/a0_66_03_01300543767256146486031657553_jpg.html" target="_blank" title="JAVA"><img alt="JAVA" data-original="http://a0.att.hudong.com/66/03/01300543767256146486031657553_s.jpg" id="changeTheId-img-29" src="http://www.huimg.cn/lib/0.gif" title="JAVA"/></a><strong>JAVA</strong></div>Java是由Sun Microsystems公司推出的Java面向对象程序设计语言（以下简称Java语言）和Java平台的总称。由James Gosling和同事们共同研发，并在1995年正式推出。Java最初被称为Oak，是1991年为消费类电子产品的嵌入式芯片而设计的。1995年更名为Java，并重新设计用于开发Internet应用程序。用Java实现的HotJava<a class="innerlink" href="http://www.baike.com/wiki/%E6%B5%8F%E8%A7%88%E5%99%A8" target="_blank" title="浏览器">浏览器</a>（支持Java applet）显示了Java的魅力：跨平台、动态<a class="innerlink" href="http://www.baike.com/wiki/Web" target="_blank" title="Web">Web</a>、<a class="innerlink" href="http://www.baike.com/wiki/Internet" target="_blank" title="Internet">Internet</a>计算。从此，Java被广泛接受并推动了Web的迅速发展，常用的浏览器均支持Javaapplet。另一方面，Java技术也不断更新。Java自面世后就非常流行，发展迅速，对<a class="innerlink" href="http://www.baike.com/wiki/C++%E8%AF%AD%E8%A8%80" target="_blank" title="C++语言">C++语言</a>形成有力冲击。在全球云计算和移动互联网的产业环境下，Java更具备了显著优势和广阔前景。2010年Oracle公司收购Sun Microsystems。<div class="content_h2"><h2 class="mar-t10">
<a name="3"> </a>组成<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="3" target="_self">编辑</a>
</h2>
</div>
<p>
Java由四方面组成：<br/>
●Java编程语言，即语法。<br/>
●Java文件格式，即各种文件夹、文件的后缀。<br/>
●Java虚拟机(JVM)，即处理*.class文件的解释器。<br/>
●Java应用程序接口(Java API)。<br/></p><div class="content_h2"><h2 class="mar-t10">
<a name="5"> </a>优势<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="5" target="_self">编辑</a>
</h2>
</div>
<p>
与传统程序不同，Sun公司在推出Java之际就将其作为一种开放的技术。全球数以万计的Java开发公司被要求所设计的Java软件必须相互兼容。“Java语言靠群体的力量而非公司的力量”是Sun公司的口号之一，并获得了广大软件开发商的认同。这与微软公司所倡导的注重精英和封闭式的模式完全不同。JAVA的用途：80%以上的高端企业级应用都使用JAVA平台（电信、银行等）。</p><p>Sun公司对Java编程语言的解释是：<br/>
Java编程语言是个简单、面向对象、分布式、解释性、健壮、安全与系统无关、可移植、高性能、多线程和静态的语言。<br/>
Java平台是基于Java语言的平台。这样的平台非常流行。因此微软公司推出了与之竞争的.NET平台以及模仿Java的C#语言。<br/>
Java是功能完善的通用程序设计语言，可以用来开发可靠的、要求严格的应用程序。<sup><a href="#hdtop_1" name="hdend_1" title="java的优势介绍">[1]</a></sup> </p><div class="content_h2"><h2 class="mar-t10">
<a name="7"> </a>概述<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="7" target="_self">编辑</a>
</h2>
</div>
<div class="img img_r" id="changeTheId-wrap-img-30" style="width:220px;"><a href="http://tupian.baike.com/a3_42_04_01300543767256146486040618954_jpg.html" target="_blank" title="JAVA"><img alt="JAVA" data-original="http://a3.att.hudong.com/42/04/01300543767256146486040618954_s.jpg" id="changeTheId-img-30" src="http://www.huimg.cn/lib/0.gif" title="JAVA"/></a><strong>JAVA</strong></div>Java programming language具有目前大部分编程语言所共有的一些特征，被特意设计用于互联网的分布式环境。Java具有类似于C++语言的“形式和感觉”，但它要比C++语言更易于使用，而且在编程时彻底采用了一种“以对象为导向”的方式。Java<a class="innerlink" href="http://www.baike.com/wiki/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80" title="编程语言">编程语言</a>的风格和C、<a class="innerlink" href="http://www.baike.com/wiki/C++" target="_blank" title="C++">C++</a> 语言风格十分相似。Java是一个纯的面向对象的程序设计语言，它继承了C++语言面向对象技术的核心，Java舍弃了C++语言中容易引起错误的指针（以引用取代）、运算符重载（operator overloading）、多重继承（以接口取代）等特性，增加了垃圾回收器功能用于回收不再被引用的对象所占据的内存空间，使得程序员不用再为内存管理而担忧。在Java SE 1.5 版本中，Java又引入了<a class="innerlink" href="http://www.baike.com/wiki/%E6%B3%9B%E5%9E%8B%E7%BC%96%E7%A8%8B" target="_blank" title="泛型编程">泛型编程</a>（Generic Programming）、类型安全的枚举、不定长参数和自动装/拆箱等语言特性。想了解更多资料可以加入java高手学习交流群，java前二三OjavaEE中四一九Generic 后面 五五O<p>Java不同于一般的编译执行计算机语言和解释执行计算机语言。它首先将源代码编译成二进制字节码(bytecode)，然后依赖各种不同平台上的虚拟机来解释执行字节码，从而实现了“一次编译、到处执行”的跨平台特性。不过，每次的编译执行需要消耗一定的时间，这同时也在一定程度上降低了Java程序的运行效率。但在J2SE 1.4.2发布后，Java的执行速度有了大幅提升。</p><div class="content_h2"><h2 class="mar-t10">
<a name="9"> </a>名字由来<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="9" target="_self">编辑</a>
</h2>
</div>
<p>一天，几位Java成员组的会员正在讨论给这个新的语言取什么名字，当时他们正在咖啡馆喝着Java(爪哇)咖啡，有一个人灵机一动说就叫Java怎样，这个提议得到了其他人的赞同，于是，Java这个名字就这样传开了。原来看SUN的JAVA标识没去多想，现在看看，这不就是一杯正冒着热气的咖啡吗。</p><div class="content_h2"><h2 class="mar-t10">
<a name="11"> </a>历史<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="11" target="_self">编辑</a>
</h2>
</div>
<p><strong>早期的Java</strong></p><div class="img img_r" id="changeTheId-wrap-img-31" style="width: 275px;"><a href="http://tupian.baike.com/a0_65_04_01300543767256146486041773942_jpg.html" target="_blank" title="JAVA"><img alt="JAVA" data-original="http://a0.att.hudong.com/65/04/01300543767256146486041773942_s.jpg" id="changeTheId-img-31" src="http://www.huimg.cn/lib/0.gif" title="JAVA"/></a><strong>JAVA</strong></div>Java平台和语言最开始只是升阳公司在1990年12开始研究的一个内部项目。升阳公司的一个叫做帕特里克·诺顿的工程师被升阳自己开发的C和C语言编译器搞得焦头烂额，因为其中的API极其难用。帕特里克决定改用NeXT，同时他也获得了研究公司的一个叫做“Stealth 计划”的项目的机会。 
<p>“Stealth 计划”后来改名为“Green计划”，詹姆斯·高斯林和麦克·舍林丹也加入了帕特里克的工作小组。他们和其他几个工程师一起在加利福尼亚州门罗帕克市沙丘路的一个小工作室里面研究开发新技术，瞄准下一代智能家电（如微波炉）的程序设计，升阳公司预料未来科技将在家用电器领域大显身手。团队最初考虑使用C语言，但是很多成员包括升阳的首席科学家比尔·乔伊，发现C和可用的API在某些方面存在很大问题。</p><p>工作小组使用的是内嵌类型平台，可以用的资源极其有限。很多成员发现C太复杂以至很多开发者经常错误使用。他们发现C缺少垃圾回收系统，还有可移植的安全性、分布程序设计和多线程功能。最后，他们想要一种易于移植到各种设备上的平台。</p><p>根据可用的资金，比尔·乔伊决定开发一种集<a class="innerlink" href="http://www.baike.com/wiki/C%E8%AF%AD%E8%A8%80" title="C语言">C语言</a>和<a class="innerlink" href="http://www.baike.com/wiki/Mesa" target="_blank" title="Mesa">Mesa</a>语言大成的新语言，在一份报告上，乔伊把它叫做“未来”，他提议升阳公司的工程师应该在C的基础上，开发一种面向对象的环境。最初，高斯林试图修改和扩展C的功能，他自己称这种新语言为C--，但是后来他放弃了。他将要创造出一种全新的语言，被他命名为“Oak”（橡树）,以他的办公室外的树而命名。</p><p>就像很多开发新技术的秘密的工程一样，工作小组没日没夜地工作到了1992年的夏天，他们能够演示新平台的一部分了，包括<a class="innerlink" href="http://www.baike.com/wiki/Green%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="Green操作系统">Green操作系统</a>，Oak的程序设计语言，类库，和其硬件。最初的尝试是面向一种类PDA设备，被命名为Star7，这种设备有鲜艳的图形界面和被称为“Duke”的智能代理来帮助用户。1992年12月3日，这台设备进行了展示。</p><p>同年11月，Green计划被转化成了“FirstPerson有限公司”，一个升阳公司的全资子公司，团队也被重新安排到了帕洛阿尔托。FirstPerson团队对建造一种高度互动的设备感兴趣，当时代华纳发布了一个关于电视机顶盒的征求提议书时（<a class="innerlink" href="http://www.baike.com/wiki/Request%20for%20Proposal" title="Request for Proposal">Request for Proposal</a>），FirstPerson改变了他们的目标，作为对征求意见书的响应，提出了一个机顶盒平台的提议。但是<a class="innerlink" href="http://www.baike.com/wiki/%E6%9C%89%E7%BA%BF%E7%94%B5%E8%A7%86" title="有线电视">有线电视</a>业界觉得FirstPerson的平台给予用户过多地控制权，因此FirstPerson的投标败给了SGI。与3DO公司的另外一笔关于机顶盒的交易也没有成功，由于他们的平台不能在电视工业产生任何效益，公司再并回升阳公司。</p><p><strong>JAVA与互联网</strong></p><p>1994年6、7月间，在经历了一场历时三天的头脑风暴的讨论后，约翰·盖吉、<a class="innerlink" href="http://www.baike.com/wiki/%E8%A9%B9%E5%A7%86%E6%96%AF%C2%B7%E9%AB%98%E6%96%AF%E6%9E%97" title="詹姆斯·高斯林">詹姆斯·高斯林</a>、比尔·乔伊、帕特里克·诺顿、韦恩·罗斯因和埃里克·斯库米，团队决定再一次改变了努力的目标，这次他们决定将该技术应用于<a class="innerlink" href="http://www.baike.com/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91" title="万维网">万维网</a>。他们认为随着<a class="innerlink" href="http://www.baike.com/wiki/Mosaic%E6%B5%8F%E8%A7%88%E5%99%A8" title="Mosaic浏览器">Mosaic浏览器</a>的到来，因特网正在向同样的高度互动的远景演变，而这一远景正是他们在有线电视网中看到的。作为原型，帕特里克·诺顿写了一个小型万维网浏览器，WebRunner，后来改名为HotJava。</p><p>同年，Oak改名为Java。商标搜索显示，Oak已被一家显卡制造商注册，因此团队找到了一个新名字。这个名字是在很多成员常去的本地咖啡馆中杜撰出来的。名字是不是首字母缩写还不清楚，很大程度上来说不是。虽然有人声称是开发人员名字的组合：<a class="innerlink" href="http://www.baike.com/wiki/James%20Gosling" title="James Gosling">James Gosling</a>（詹姆斯·高斯林），Arthur Van Hoff（阿瑟·凡·霍夫），Andy Bechtolsheim（安迪·贝克托克姆），或“Just Another Vague Acronym”（只是另外一个含糊的缩写）。还有一种比较可信的说法是这个名字是出于对咖啡的喜爱，所以以Java咖啡来命名。类文件的前四个字节如果用十六进制阅读的话，分别为CA FE BA BE，就会拼出两个单词“CAFE BABE”（咖啡宝贝）。</p><p>1994年10月，HotJava和Java平台为公司高层进行演示。1994年，Java 1.0a版本已经可以提供下载，但是Java和<a class="innerlink" href="http://www.baike.com/wiki/HotJava%E6%B5%8F%E8%A7%88%E5%99%A8" title="HotJava浏览器">HotJava浏览器</a>的第一次公开发布却是在1995年3月23日SunWorld大会上进行的。升阳公司的科学指导约翰·盖吉宣告Java技术。这个发布是与网景公司的执行副总裁马克·安德森的惊人发布一起进行的，宣布网景将在其浏览器中包含对Java的支持。1996年1月，升阳公司成立了Java业务集团，专门开发Java技术。</p><div class="content_h2"><h2 class="mar-t10">
<a name="13"> </a>Java主要特性<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="13" target="_self">编辑</a>
</h2>
</div>
<p>1、Java语言是简单的。Java语言的语法与C语言和C++语言很接近，使得大多数程序员很容易学习和使用Java。另一方面，Java丢弃了<a class="innerlink" href="http://www.baike.com/wiki/C++" title="C++">C++</a>中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java语言不使用指针，并提供了自动的废料收集，使得程序员不必为内存管理而担忧。</p><p>2、Java语言是一个面向对象的。Java语言提供类、接口和继承等原语，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为implements）。Java语言全面支持动态绑定，而C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。</p><p>3、Java语言是分布式的。Java语言支持Internet应用的开发，在基本的Java应用编程接口中有一个网络应用编程接口（java.net），它提供了用于网络应用编程的类库，包括URL、URLConnection、Socket、ServerSocket等。Java的RMI(远程方法激活)机制也是开发分布式应用的重要手段。</p><p>4、Java语言是健壮的。Java的强类型机制、异常处理、废料的自动收集等是Java程序健壮性的重要保证。对指针的丢弃是Java的明智选择。Java的安全检查机制使得Java更具健壮性。</p><p>5、Java语言是安全的。Java通常被用在网络环境中，为此，Java提供了一个安全机制以防恶意<a class="innerlink" href="http://www.baike.com/wiki/%E4%BB%A3%E7%A0%81" title="代码">代码</a>的攻击。除了Java语言具有的许多安全特性以外，Java对通过网络下载的类具有一个安全防范机制（类<a class="innerlink" href="http://www.baike.com/wiki/classloader" title="classloader">classloader</a>），如分配不同的名字空间以防替代本地的同名类、<a class="innerlink" href="http://www.baike.com/wiki/%E5%AD%97%E8%8A%82%E4%BB%A3%E7%A0%81" title="字节代码">字节代码</a>检查，并提供安全管理机制（类SecurityManager）让Java应用设置安全哨兵。 </p><p>6、Java语言是体系结构中立的。Java程序（后缀为java的文件）在Java平台上被编译为体系结构中立的字节码格式（后缀为class的文件），然后可以在实现这个Java平台的任何系统中运行。这种途径适合于异构的网络环境和软件的分发。 </p><p>7、Java语言是可移植的。这种可移植性来源于体系结构中立性，另外，Java还严格规定了各个基本数据类型的长度。Java系统本身也具有很强的可移植性，Java编译器是用Java实现的，Java的运行环境是用ANSIC实现的。</p><p>8、Java语言是解释型的。如前所述，Java程序在Java平台上被编译为字节码格式，然后可以在实现这个Java平台的任何系统中运行。在运行时，Java平台中的Java解释器对这些字节码进行解释执行，执行过程中需要的类在联接阶段被载入到运行环境中。</p><p>9、Java是高性能的。与那些解释型的高级脚本语言相比，Java的确是高性能的。事实上，Java的运行速度随着JIT(Just-In-Time)编译器技术的发展越来越接近于C++。 </p><p>10、Java语言是多线程的。在Java语言中，线程是一种特殊的对象，它必须由Thread类或其子（孙）类来创建。通常有两种方法来创建线程：其一，使用型构为Thread(Runnable)的<a class="innerlink" href="http://www.baike.com/wiki/%E6%9E%84%E9%80%A0%E5%AD%90" title="构造子">构造子</a>将一个实现了Runnable接口的对象包装成一个线程，其二，从Thread类派生出子类并重写run方法，使用该子类创建的对象即为线程。值得注意的是Thread类已经实现了Runnable接口，因此，任何一个线程均有它的run方法，而run方法中包含了线程所要运行的代码。线程的活动由一组方法来控制。Java语言支持多个线程的同时执行，并提供多线程之间的同步机制（关键字为synchronized）。</p><p>11、Java语言是动态的。Java语言的设计目标之一是适应于动态变化的环境。Java程序需要的类能够动态地被载入到运行环境，也可以通过网络来载入所需要的类。这也有利于软件的升级。另外，Java中的类有一个运行时刻的表示，能进行运行时刻的类型检查。</p><p>Java语言的优良特性使得Java应用具有无比的健壮性和可靠性，这也减少了应用系统的维护费用。Java对对象技术的全面支持和Java平台内嵌的API能缩短应用系统的开发时间并降低成本。Java的编译一次，到处可运行的特性使得它能够提供一个随处可用的开放结构和在多平台之间传递信息的低成本方式。特别是Java企业应用编程接口（Java Enterprise APIs）为企业计算及<a class="innerlink" href="http://www.baike.com/wiki/%E7%94%B5%E5%AD%90%E5%95%86%E5%8A%A1" title="电子商务">电子商务</a>应用系统提供了有关技术和丰富的类库。</p><div class="content_h2"><h2 class="mar-t10">
<a name="15"> </a>Java语言特点<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="15" target="_self">编辑</a>
</h2>
</div>
<div class="img img_r" id="changeTheId-wrap-img-32" style="width:300px;"><a href="http://tupian.baike.com/a1_36_04_01300543767256146486043303674_jpg.html" target="_blank" title="JAVA"><img alt="JAVA" data-original="http://a1.att.hudong.com/36/04/01300543767256146486043303674_s.jpg" id="changeTheId-img-32" src="http://www.huimg.cn/lib/0.gif" title="JAVA"/></a><strong>JAVA</strong></div>Java是一种简单的，面向对象的，分布式的，解释型的，健壮安全的，结构中立的，可移植的，性能优异、多线程的动态语言。<p>当1995年SUN推出Java语言之后，全世界的目光都被这个神奇的语言所吸引。那么Java到底有何神奇之处呢。</p><p>Java语言其实最早诞生于1991年，起初被称为OAK语言，是SUN公司为一些消费性电子产品而设计的一个通用环境。他们最初的目的只是为了开发一种独立于平台的软件技术，而且在网络出现之前，OAK可以说是默默无闻，甚至差点夭折。但是，网络的出现改变了OAK的命运。</p><p>在Java出现以前，Internet上的信息内容都是一些乏味死板的HTML文档。这对于那些迷恋于WEB浏览的人们来说简直不可容忍。他们迫切希望能在WEB中看到一些交互式的内容，开发人员也极希望能够在WEB上创建一类无需考虑软硬件平台就可以执行的应用程序，当然这些程序还要有极大的安全保障。对于用户的这种要求，传统的编程语言显得无能为力。SUN的工程师敏锐地察觉到了这一点，从1994年起，他们开始将OAK技术应用于WEB上，并且开发出了HotJava的第一个版本。当SUN公司1995年正式以Java这个名字推出的时候，几乎所有的WEB开发人员都心生感叹：噢，这正是我想要的。于是Java成了一颗耀眼的明星，丑小鸭一下了变成了白天鹅。</p><p><strong>Java近况</strong></p><p>在流行几年之后，Java在<a class="innerlink" href="http://www.baike.com/wiki/%E6%B5%8F%E8%A7%88%E5%99%A8" title="浏览器">浏览器</a>中的地位被逐步侵蚀。它在简单交互性动画方面的用途已经完全被Adobe公司的Flash排挤，2005年Java倾向只被用于<a class="innerlink" href="http://www.baike.com/wiki/%E9%9B%85%E8%99%8E" title="雅虎">雅虎</a>游戏那样的更为复杂的应用程序。Java同时遭受到来自微软的反对，他们决定在新版本的<a class="innerlink" href="http://www.baike.com/wiki/Internet%20Explorer" title="Internet Explorer">Internet Explorer</a>和Windows中不再附带Java平台。</p><p>与此相反。在万维网的服务器端和手持设备上，Java变得更加流行。很多网站在前端使用<a class="innerlink" href="http://www.baike.com/wiki/JSP" title="JSP">JSP</a>和其他的Java技术。</p><p>在桌面系统上，独立的Java程序还是相对少见，这是因为Java平台的运行开销较大，而许多人的电脑上没有安装Java，由于网络带宽在以前较小，下载Java曾经是个耗时的事情。但是随着计算机计算能力、网络带宽在10年中取得了很大的进步，同时虚拟机和编译器的质量得到了越高，许多应用程序得到了广泛的使用，包括：</p><p><strong>开源软件：</strong></p><p>NetBeans </p><p>Eclipse </p><p><a class="innerlink" href="http://www.baike.com/wiki/jEdit" title="jEdit">jEdit</a></p><p>Azureus BitTorrent客户端。 </p><p>JNode操作系统 </p><p><strong>闭源软件:</strong></p><p><a class="innerlink" href="http://www.baike.com/wiki/eioffice" title="eioffice">eioffice</a>(永中Office) </p><p>纯Java 3D游戏<a class="innerlink" href="http://www.baike.com/wiki/%E5%90%88%E9%87%91%E6%88%98%E5%A3%AB" title="合金战士">合金战士</a>Chrome </p><p>Java程序 </p><p>目前Java提供以下三个版本：</p><p>Java Platform，Enterprise Edition (Java EE：Java平台企业版) </p><p>Java Platform，Standard Edition (Java SE：Java平台标准版) </p><p>Java Platform，Micro Edition (Java ME：Java平台微型版)</p><p><strong>版本历史（时间表）</strong></p><div class="img img_r" id="changeTheId-wrap-img-33" style="width: 276px;"><a href="http://tupian.baike.com/a4_54_63_01300000057455119910634024155_jpg.html" target="_blank" title="点击查看原图"><img alt="JAVA" data-original="http://a4.att.hudong.com/54/63/01300000057455119910634024155_s.jpg" id="changeTheId-img-33" src="http://www.huimg.cn/lib/0.gif" title="JAVA"/></a><strong style="">JAVA</strong></div><p>1995年5月23日，Java语言诞生 </p><p>1996年1月，第一个JDK-JDK1.0诞生 </p><p>1996年4月，10个最主要的<a class="innerlink" href="http://www.baike.com/wiki/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F" title="操作系统">操作系统</a>供应商申明将在其产品中嵌入JAVA技术 </p><p>1996年9月，约8.3万个网页应用了JAVA技术来制作 </p><p><a class="innerlink" href="http://www.baike.com/wiki/1997%E5%B9%B42%E6%9C%8818%E6%97%A5" title="1997年2月18日">1997年2月18日</a>，JDK1.1发布 </p><p>1997年4月2日，<a class="innerlink" href="http://www.baike.com/wiki/JavaOne" title="JavaOne">JavaOne</a>会议召开，参与者逾一万人，创当时全球同类会议规模之纪录 </p><p>1997年9月，JavaDeveloperConnection社区成员超过十万 </p><p>1998年2月，JDK1.1被下载超过2,000,000次 </p><p>1998年12月8日，JAVA2企业平台J2EE发布 </p><p>1999年6月，SUN公司发布Java的三个版本：标准版（J2SE）、企业版（J2EE）和微型版（J2ME） </p><p>2000年5月8日，JDK1.3发布 </p><p><a class="innerlink" href="http://www.baike.com/wiki/2000%E5%B9%B45%E6%9C%8829%E6%97%A5" title="2000年5月29日">2000年5月29日</a>，JDK1.4发布 </p><p>2001年6月5日，NOKIA宣布，到2003年将出售1亿部支持Java的<a class="innerlink" href="http://www.baike.com/wiki/%E6%89%8B%E6%9C%BA" title="手机">手机</a></p><p>2001年9月24日，J2EE1.3发布 </p><p>2002年2月26日，J2SE1.4发布，自此Java的计算能力有了大幅提升 </p><p>2004年9月30日18:00PM，J2SE1.5发布，成为Java语言发展史上的又一里程碑。为了表示该版本的重要性，J2SE1.5更名为Java SE 5.0 </p><p>2005年6月，JavaOne大会召开，SUN公司公开Java SE 6。此时，Java的各种版本已经更名，以取消其中的数字“2”：J2EE更名为Java EE，J2SE更名为Java SE，J2ME更名为Java ME </p><p>2006年12月，SUN公司发布JRE6.0 </p><p>2009年，甲骨文公司宣布收购Sun<sup><a href="#hdtop_2" name="hdend_2" title="详讯：甲骨文将以74亿美元收购Sun">[2]</a></sup> <br/></p><a name="17"> </a><h3>开发技巧</h3>Eclipse中最常用的快捷键：<br/>
Ctrl+L：Go to Line　<br/>
F5：Step Into<br/>
Ctrl+H：Open Search Dialog　　<br/>
Ctrl+Shift+K：Find Previous　　<br/>
Ctrl+F11 Run　　<br/>
Ctrl+Shift+\：Remove Block Comment　　<br/>
F11：Debug　　<br/>
Ctrl+Shift+/Add：Block Comment　　<br/>
Ctrl+K：Find Next　　<br/>
F8：Resume (during Debug)　　<br/>
Ctrl+O：Quick Outline　　<br/>
Alt+Shift+RRename：(Refactoring)　　<br/>
F3：Open Declaration　　<br/>
Ctrl+R：Run to Line　　<br/>
Ctrl+/：Toggle Comment　　<br/>
Ctrl+Shift+O：Organize Imports　　<br/>
F6：Step Over　　<br/>
Ctrl+Shift+F：Format　　<br/>
Ctrl+Shift+G：References in Workspace<p><span style="LINE-HEIGHT: 24px; FONT-SIZE: 16px; FONT-WEIGHT: bold">语言特性</span></p><p>Java之所以被开发，是要达到以下五个：</p><p>应当使用面向对象程序设计方法学 </p><p>应当允许同一程序在不同的计算机平台执行 </p><p>应当包括内建的对计算机网络的支持 </p><p>应当被设计成安全地执行远端代码 </p><p>应当易于使用，并借鉴以前那些面向对象语言（如C）的长处。 </p><p>Java技术主要分成几个部分：Java语言、运行环境JVM、类库。一般情况下说Java时并不区分指的是哪个部分。</p><p><strong>面向对象</strong></p><p>Java的特点之一就是面向对象，是<a class="innerlink" href="http://www.baike.com/wiki/%E7%A8%8B%E5%BA%8F" title="程序">程序</a>设计方法的一种。“面向对象程序设计语言”的核心之一就是开发者在设计软件的时候可以使用自定义的类型和关联操作。<a class="innerlink" href="http://www.baike.com/wiki/%E4%BB%A3%E7%A0%81" title="代码">代码</a>和<a class="innerlink" href="http://www.baike.com/wiki/%E6%95%B0%E6%8D%AE" title="数据">数据</a>的实际集合体叫做“对象”。一个对象可以想象成绑定了很多“行为（代码）”和“状态（数据）”的物体。对于数据结构的改变需要和代码进行通信然后操作，反之亦然。面向对象设计让大型软件工程的计划和设计变得更容易管理，能增强工程的健康度，减少失败工程的数量。</p><p>面向对象设计另外一个目标就是能产生很多的有关联的类，可以让软件的再开发变得简单。举例来说，很多软件工程都有同样的功能，尤其是很多应用了同一原理组织的软件工程。软件的二次开发者想自己为软件开发插件以增强功能的时候，绝对不想看到混乱的开发代码和管理计划。面向对象的目的就是不生产难懂且难以使用的代码，为软件各个功能群之间建立有效的通信通道。很多开源软件社区正在计划给软件作者提供更多的类来让软件的二次开发变得简便。</p><p><strong>跨平<a class="innerlink" href="http://www.baike.com/wiki/%E5%8F%B0%E5%A7%93" title="台姓">台姓</a></strong></p><div class="img img_r" id="changeTheId-wrap-img-34" style="width: 292px;"><a href="http://tupian.baike.com/a0_16_64_01300000057455119910644742478_gif.html" target="_blank" title="点击查看原图"><img alt="JAVA" data-original="http://a0.att.hudong.com/16/64/01300000057455119910644742478_s.gif" id="changeTheId-img-34" src="http://www.huimg.cn/lib/0.gif" title="JAVA"/></a><strong style="">JAVA</strong></div>Java语言的第二个特性就是跨平台性，也就是说使用Java语言编写的程序可以在编译后不用经过任何更改，就能在任何硬件设备条件下运行。这个特性经常被称为“一次编译，到处运行”。 
<p>实现跨平台性的方法是大多数<a class="innerlink" href="http://www.baike.com/wiki/%E7%BC%96%E8%AF%91%E5%99%A8" title="编译器">编译器</a>在进行Java语言程序的编码时候会生成一个用字节码（Bytecode）写成的“半成品”，这个“半成品”会在Java虚拟机（解释层）的帮助下运行，虚拟机会把它转换成当前所处硬件平台的原始代码。之后，Java虚拟机会打开标准库，进行数据（图片、线程和网络）的存取工作。主要注意的是，尽管已经存在一个进行代码翻译的解释层，有些时候Java的字节码代码还是会被<a class="innerlink" href="http://www.baike.com/wiki/JIT%E7%BC%96%E8%AF%91" title="JIT编译">JIT编译</a>器进行<a class="innerlink" href="http://www.baike.com/wiki/%E4%BA%8C%E6%AC%A1%E7%BC%96%E8%AF%91" title="二次编译">二次编译</a>。</p><p>有些编译器，比如GCJ，可以自动生成原始代码而不需要解释层。但是这些<a class="innerlink" href="http://www.baike.com/wiki/%E7%BC%96%E8%AF%91%E5%99%A8" title="编译器">编译器</a>所生成的代码只能应用于特定平台。并且GCJ目前只支持部分的Java API。</p><p>升阳对于Java的许可是“全兼容的”，这也导致了微软和升阳关于微软的程序不支持RMI和JNI接口、并且增加特性为己所用的法律争端。升阳最终赢得了官司，获得了大约两千万美元的赔偿，法院强制要求微<a class="innerlink" href="http://www.baike.com/wiki/%E8%BD%AF%E6%89%A7%E8%A1%8C" title="软执行">软执行</a>升阳公司关于Java的许可要求。作为回应，微软不再在Windows系统中捆绑Java，最新的Windows版本，Windows Vista和Internet Explorer 7.0版本也不再提供对于Java应用程序和控件的支持。但是升阳公司和其他使用Java运行时系统的公司对于微软的操作对用户提供无偿的第三方插件和程序支持。</p><p>Java语言使用解释层最初是为了轻巧性。所以这些程序的运行效率比C语言和C要低很多，用户也对此颇有微词。很多最近的调查显示Java的程序运行速度比几年前要高出许多，有些同样功能的程序的效率甚至超过了C和C语言编写的程序。</p><p>Java语言在最开始应用的时候是没有解释层的，所有需要编译的代码都直接转换成机器的原始代码。这样做的后果就是获得了最佳的性能，但是程序臃肿异常。从JIT技术开始，Java的程序都经过一次转换之后才变成机器码。很多老牌的第三方虚拟机都使用一种叫做“<a class="innerlink" href="http://www.baike.com/wiki/%E5%8A%A8%E6%80%81%E7%BC%96%E8%AF%91" title="动态编译">动态编译</a>”的技术，也就是说虚拟机实时<a class="innerlink" href="http://www.baike.com/wiki/%E7%9B%91%E6%B5%8B" title="监测">监测</a>和分析程序的运行行为，同时选择性地对程序所需要的部分进行编译和优化。所有这些技术都改善了代码的运行速度，但是又不会让程序的体积变得失常。</p><p>程序的轻便性事实上是软件编写很难达到的一个目标，Java虽然成功地实现了“一次编译，到处运行”，但是由于平台和平台之间的差异，所编写的程序在转换代码的时候难免会出现微小的、不可察觉的错误和意外。有些程序员对此非常头疼，他们嘲笑Java的程序不是“一次编译，到处运行”，而是“一次编译，到处调试”。</p><p>平台无关性让Java在服务器端软件领域非常成功。很多服务器端软件都使用Java或相关技术建立。</p><p><strong>自动垃圾回收(<a class="innerlink" href="http://www.baike.com/wiki/Garbage%20collection" title="Garbage collection">Garbage collection</a>)</strong></p><p>C语言被用户诟病的原因之一就是大多数C编译器不支持垃圾收集机制。通常使用C 编程的时候，程序员所创建的对象在创建时在本地堆栈上分配一块内存地址，当不需要这个对象，进行析构或者删除的时候再释放分配的内存地址。如果对象是在堆上分配的，而程序员又忘记进行地址删除，那么就会造成内存泄漏(Memory Leak)。长此以往，程序运行的时候可能会生成很多不清除的垃圾，浪费了不必要的内存空间。更糟糕的是，如果同一内存地址被删除两次的话，程序会变得不稳定，甚至崩溃。因此有经验的C程序员都会在删除之后将指针重置为0，然后在删除之前先判断指针是否为0。</p><p>Java语言则不同，上述的情况被自动垃圾收集功能自动处理。对象的建立和放置都是在内存堆上面进行的。程序或者其他的对象可以锁定<a class="innerlink" href="http://www.baike.com/wiki/%E4%B8%80%E5%9D%97%E5%A0%86" title="一块堆">一块堆</a>地址来进行其他对象的引用。当一个对象没有任何引用的时候，Java的自动垃圾收集机制就发挥作用，自动删除这个对象所占用的空间，释放内存以避免内存泄漏。但是内存泄漏并不是就此避免了，当程序员疏忽大意地忘记解除一个对象不应该有的引用的时候，内存泄漏仍然不可避免，不过发生的几率要比不启用垃圾收集机制的C程序少很多。但是总体来讲，自动垃圾收集机制要安全和简单许多。</p><p>不同厂商、不同版本的JVM中的内存垃圾回收机制并不完全一样，通常越新版本的内存回收机制越快，IBM、BEA、SUN等等开发JVM的公司都曾宣称过自己制造出了世界上最快的JVM，JVM性能的世界纪录也在不断的被打破并提高。</p><p>但是应该注意到，C中也可以使用“智能指针”（Smart Pointer）或者使用C托管扩展编译器的方法来实现自动化内存释放，智能指针可以在标准类库中找到，而C托管扩展被微软的Visual C 7.0及以上版本所支持。智能指针的优点是不需引入缓慢的垃圾收集机制，而且可以不考虑线程安全的问题，但是缺点是如果不善使用智能指针的话，性能有可能不如垃圾收集机制，而且不断地分配和释放内存可能造成<a class="innerlink" href="http://www.baike.com/wiki/%E5%86%85%E5%AD%98%E7%A2%8E%E7%89%87" title="内存碎片">内存碎片</a>，需要手动对堆进行压缩。除此之外，由于智能指针是一个基于模板的功能，所以没有经验的程序员在需要使用多态特性进行自动清理时也可能束手无策。</p><p>当然，作为一个“负责任”的程序编撰员，在程序完结前应该手动清理不再需要的变量和物件，令效能有点提升。以Java为例，finalize方法位于Java.Object内，而Object这个类是每一个类自动承继的。因此清理需要的便是覆写finalize便行了。</p><table cellpadding="1" id="changeTheId-jqe-table-1"><tbody><tr><td>protected void finalize() throws Throwable{<br/>    super.finalize();<br/>}</td></tr></tbody></table><p>当中若有任何变量要清理，可以在super.finalize()前加上  = null; 或 . = null;</p><p>不过事实上，就算使用了finalize()，你还是不能保证你在堆栈中所使用的空间会马上被回收，垃圾回收机制只有在你的堆栈已经毫无空间可以使用的情况下，才会真的去进行回收的动作，因此在编程上，还是要避免内存空间的浪费。</p><p><strong>接口和类别</strong></p><p>Java自带了创建接口的类别，可以这样使用：</p><table cellpadding="1" id="changeTheId-jqe-table-2"><tbody><tr><td>public interface Deleteable {<br/>   void delete();<br/>}</td></tr></tbody></table><p>这段代码的意思是任何实现（implement）Deleteable接口的类别都必须实现delete()方法。每个类别对这个方法的实现可以自行定制。由此概念可以引出很多种使用方法，下面是一个类别的例子：</p><table cellpadding="1" id="changeTheId-jqe-table-3"><tbody><tr><td>public class Fred implements Deleteable {<br/>    //Must include the delete () method to satisfy the Deleteable interface<br/>    public void delete() { //code implementation goes here<br/>    }<br/>    //Can also include other methods<br/>    public void doOtherStuff() {<br/>    }<br/>}</td></tr></tbody></table><p>在另外一个类别中，可以使用这样的代码：</p><table cellpadding="1" id="changeTheId-jqe-table-4"><tbody><tr><td>public void deleteAll (Deleteable [] list) {<br/>    for (int i = 0; i &lt; list.length; i ) {<br/>         list[i].delete();<br/>    }<br/>}</td></tr></tbody></table><p>因为队列中所有的对象都可以使用delete()方法。Deleteable队列中包含Fred对象的引用，而这个类别和其他Deleteable类别在使用deleteAll()方法时候不需要进行任何改变。</p><p>之所以这样做就是为了在接口的执行和其代码之间进行区别。举例来说，一个名叫Collection的接口可以包含任何对象所需要的引入、转换和存储数据的方法，其他的类都可以使用这个接口。但是这个接口可以是一个可重定义大小的队列、一个链表或者是其他功能的集合。</p><p>这种特性其实是一种折中的办法。Java的设计者们不想让Java有多重继承的特性，因为C的多重继承显示了这种特性的困难。Java的接口功能可以提供同样的功能，但是又不会很复杂。</p><div class="content_h2"><h2 class="mar-t10">
<a name="19"> </a>Java 5.0的特性<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="19" target="_self">编辑</a>
</h2>
</div>
<p><strong>自动装箱/拆箱 (Auto-Boxing/<a class="innerlink" href="http://www.baike.com/wiki/unboxing" title="unboxing">unboxing</a>)</strong></p><p>没有自动装箱/拆箱:</p><table cellpadding="1" id="changeTheId-jqe-table-5"><tbody><tr><td>int int1 = 1;<br/>Integer integer2 = new Integer(int1);<br/>int int3 = integer2.intValue();</td></tr></tbody></table><p>有自动装箱/拆箱:</p><table cellpadding="1" id="changeTheId-jqe-table-6"><tbody><tr><td>int int1 = 1;<br/>Integer integer2 = int1;     // 自动装箱<br/>int int3 = integer2;         // 自动拆箱</td></tr></tbody></table><p><strong>泛型 (Generic Types)</strong></p><p>泛型就像是C的模板。原有的Collection API加上泛型支援后，增加对型别的检查，减少程序错误的机会。</p><p>没有泛型:</p><table cellpadding="1" id="changeTheId-jqe-table-7"><tbody><tr><td>HashMap hm = new HashMap();<br/>int i=1;<br/>String tt="test";<br/>hm.put(new Integer(i), tt);</td></tr></tbody></table><p>使用Generic:</p><table cellpadding="1" id="changeTheId-jqe-table-8"><tbody><tr><td>HashMap hm = new HashMap();<br/>int i=1;<br/>String tt = "test";<br/>hm.put(i, tt);      // 在这里对int自动装箱成Integer，也使用了参数的型别检查</td></tr></tbody></table><p>自动装箱的新功能，可能是从C#语言身上学习来的，Java已经越来越像C#。然而Java对自动装箱/拆箱的支援，仅是利用编译器实现，在Java Bytecode中，并无自动装箱/拆箱的操作码(<a class="innerlink" href="http://www.baike.com/wiki/opcode" title="opcode">opcode</a>)。</p><p><strong>注释 (Annotation)</strong></p><p>Annotation全名是Program Annotation Facility，是Java SE 5.0的新功能。Java的Annotation类似于.NET的属性 (Attribute)。Java的注释是一种接口(interface)，继承自java.lang.annotation.Annotation。Class File则贴上ACC_ANNOTATION标签。</p><table cellpadding="1" id="changeTheId-jqe-table-9"><tbody><tr><td>// JDK 1.4<br/>/**<br/> * @todo to be implemented<br/> **/<br/>void gimmeSomeLoving() {<br/>  throw new Exception("not implemented");<br/>}</td></tr></tbody></table><table cellpadding="1" id="changeTheId-jqe-table-10"><tbody><tr><td>// <a class="innerlink" href="http://www.baike.com/wiki/JDK%201.5" title="JDK 1.5">JDK 1.5</a><br/>@todo void gimmeSomeLoving() {<br/>  throw new Exception("not implemented");<br/>}</td></tr></tbody></table><p><strong>枚举类型 (enum)</strong></p><p>枚举类型也是J2SE 5.0的新功能。过去Java认为<a class="innerlink" href="http://www.baike.com/wiki/enum" title="enum">enum</a>的关键字是不必要的功能，因为用public static int field 就可以取代enum，因此过去一直不用。J2SE 5.0中的class如果是enum，在class file中会被贴上一个ACC_ENUM标签。</p><table cellpadding="1" id="changeTheId-jqe-table-11"><tbody><tr><td>// JDK 1.4<br/>class JavaTech {<br/>       public static final int J2ME = 1;<br/>       public static final int J2SE = 2;<br/>       public static final int J2EE = 3;<br/>}</td></tr></tbody></table><table cellpadding="1" id="changeTheId-jqe-table-12"><tbody><tr><td>// JDK 1.5<br/>public enum NewJavaTech {<br/>       J2ME, J2SE, J2EE<br/>}</td></tr></tbody></table><p><strong>输入输出</strong></p><p>试试用位于<a class="innerlink" href="http://www.baike.com/wiki/java.io" title="java.io">java.io</a>包 (package) 内的BufferedReader。请紧记要import java.io.*;。尾部"*"是指示要 import 所有位于java.io内的类。</p><table cellpadding="1" id="changeTheId-jqe-table-13"><tbody><tr><td>import java.io.*;</td></tr></tbody></table><table cellpadding="1" id="changeTheId-jqe-table-14"><tbody><tr><td>public class TestRead{<br/>   public static void main(String[] args) throws IOException{<br/>       BufferedReader bufread = new BufferedReader(System.in);<br/>       String str;<br/>       System.out.print("请输入一句字串");<br/>       str = bufread.readLine();<br/>       System.out.println(str);<br/>   }<br/>}</td></tr></tbody></table><p>程序码解说：import java.io.* 是把整个包“打开”，那么你便可以承继该包的类，用内里的类创建一个物件。其实java.io.* 是缺省import的，不过Eclipse会要求import java.io所以功夫不可小。</p><p>public class TestRead是宣告一个“公开”的class（类别），而名字是TestRead 。</p><p>public static void main(String[] args)是一个主程序。虽然是Method，但main method对于Java执行器来说是第一个执行程序的地方，同样离开了main method就等如离开了程序。main method的宣告式是要背的，当然是有解，不过暂且不说。</p><p>BufferedReader bufread = new BufferedReader(System.in)在此创建一个以BufferedReader为蓝图的物件bufread，bufread名字是任你定的。详细来说是第一个BufferedReader是宣告bufread是一个会“存储”一个BufferedReader类的物件。new BufferedReader(System.in)是指创建一个BufferedReader的物件。由于BufferedReader需要一个输入流，因此我们指定了System.in给BufferedReader。</p><p><strong>应用程序开发接口</strong></p><p>在Java语言中，应用程序接口（API）化身成类，并且分组成为包。每个包中包含有相关的接口和类。对于不同的平台，Java提供了不同版本的包。</p><p>API的设定由升阳公司和其他公司通过JCP（Java社群程序）决定。任何公司和个人都可以参与这个工程，对API进行设计。</p><p>2004年，IBM和BEA公司准备联合对官方的Java开源软件工程进行支持，但是2005年初，升阳公司拒绝了这个支持。</p><p><strong>Hello World</strong></p><p>下面这个程序显示“Hello, world!”然后结束运行：</p><table cellpadding="1" id="changeTheId-jqe-table-15"><tbody><tr><td>public class HelloWorld {<br/>  public static void main(String[] args) {<br/>    System.out.println("Hello, world!");<br/>  }<br/>}</td></tr></tbody></table><p><strong>国际化</strong></p><p>Java语言严格区分字节和字符。字符的存储格式为UCS-2，从Java 5开始支持UTF-16字符。Java的程序遂可以使用Unicode字符进行书写。</p><p>下面就是一个合法的Java程序，里面包含了中文字符作为类的名称而不是字符串，这个程序可以在编译器中运行通过。</p><table cellpadding="1" id="changeTheId-jqe-table-16"><tbody><tr><td>public class 哈啰世界 {<br/>   private string 文本 = "哈啰世界";<br/>}</td></tr></tbody></table><div class="content_h2"><h2 class="mar-t10">
<a name="21"> </a>深入JAVA<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="21" target="_self">编辑</a>
</h2>
</div>
<p><strong>数据类型<br/></strong>任何编程语言都免不了要<a class="innerlink" href="http://www.baike.com/wiki/%E5%AE%9A%E4%B9%89" title="定义">定义</a>变量，JAVA也不例外。JAVA的变量声明形式如下：</p><table cellpadding="1" id="changeTheId-jqe-table-17"><tbody><tr><td>type name;</td></tr></tbody></table><p>其中的type是<a class="innerlink" href="http://www.baike.com/wiki/%E6%95%B0%E6%8D%AE" title="数据">数据</a>类型名，name指定义的该数据类型的一个具体变量。</p><p>JAVA的内置数据类型主要有如下几种：</p><p>boolean：布尔值，仅有两个常量，true和false. </p><p>byte：字节类型值，长度8位（一个字节），取值范围是-128至127。 </p><p>short：短整型值，长度16位（两个字节），取值范围是-32768至32767。 </p><p>int：整型值，长度32位（四个字节），取值范围是-2147483648至2147483647 </p><p>long：长整型，长度64位（八个字节），取值范围是-9223372036854775808至9223372036854775807 </p><p>float：单精度IEEE754浮点数，长度32位（四个字节）。 </p><p>double：双精度IEEE754浮点数，长度64位（八个字节）。 </p><p>char：字符型，长度16位，支持所有的Unicode和Ascii编码。 </p><p><strong><a class="innerlink" href="http://www.baike.com/wiki/java%E5%85%B3%E9%94%AE%E5%AD%97" title="java关键字">java关键字</a></strong></p><div class="content_h2"><h2 class="mar-t10">
<a name="23"> </a>关于Java的批评<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="23" target="_self">编辑</a>
</h2>
</div>
<div class="img img_r" id="changeTheId-wrap-img-35" style="width:300px;"><a href="http://tupian.baike.com/a0_04_04_01300543767256146486046731310_jpg.html" target="_blank" title="JAVA"><img alt="JAVA" data-original="http://a0.att.hudong.com/04/04/01300543767256146486046731310_s.jpg" id="changeTheId-img-35" src="http://www.huimg.cn/lib/0.gif" title="JAVA"/></a><strong>JAVA</strong></div>Java试图通过新的方式解决软件编写的复杂性。很多人认为Java语言做到了它承诺的一切。但是Java并不是一门完美的语言，在编程风格、编程环境和需求方面并没有获得全球性的认可。<p>并不是所有的工程和环境需要企业级别的复杂性，比如一个简单的个人网站或者独自编程的程序员所写的程序。这些程序员会发现Java的复杂管理对于自己要做的程序来说过于强大了。 </p><p>Java经常让那些并不是对面向对象编程很热心的程序员感到不满。 </p><p>一些人觉得Java在面向对象上面做的没有Ruby和Smalltalk纯粹。但是最新出现的用Java实现的语言Groovy解决了这些问题。 </p><p>作为一种已经建立的新技术，Java显然综合了很多语言的特性，比如<a class="innerlink" href="http://www.baike.com/wiki/C" title="C  ">C</a>、<a class="innerlink" href="http://www.baike.com/wiki/C%E8%AF%AD%E8%A8%80" title="C语言">C语言</a>、<a class="innerlink" href="http://www.baike.com/wiki/Python" title="Python">Python</a>等等。一些对于Java的评论认为Java的不变性在动摇，有些人认为Java只是一种“新的COBOL"语言。 </p><p><strong>语言问题</strong></p><p>有些程序员不喜欢原始类型(primitive type)和类(class)的分离，尤其是那些曾经使用过Smalltalk和Ruby的程序员。他们会问：“这就是一切皆对象(object)”。</p><p>事实上，JAVA语言本身只是Smalltalk的一个不完整的代替品。JAVA的流行与SUN背后的支持分不开。 </p><p>Java的代码相对于其他的代码来说过于冗长，这与它的轻便化声明相违背。 </p><p>Java语言在单范例程序方面非常出色。历史上的Java则在这方面做的不好。 </p><p>Java是一种单层继承的语言。这也导致了程序员在试图使用多重继承时候的不便，而很多语言都可以使用这个特性。但是Java可以使用接口类，把多重继承可能导致的风险减少到最小。 </p><p>Java不支持运算符重载，这是为了防止运算符重载使得代码的功能变的不清晰。但是用Java实现的语言Groovy可以进行运算符重载。 </p><p>5.0版本增加了大量的基本类的支持，可以节省大量的额外编程工作。 </p><p>过去Java对于文本的操作和其他语言，比如Perl和PHP相比差的较多，但Java在1.4版本时候引入了<a class="innerlink" href="http://www.baike.com/wiki/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F" title="正则表达式">正则表达式</a>。 </p><p>准确地说，JAVA不是平台无关的，它本身就是一个平台。 </p><p><strong>类库问题</strong></p><p>使用Swing平台编写的带有<a class="innerlink" href="http://www.baike.com/wiki/GUI" title="GUI">GUI</a>（图形用户界面）的程序和其他原始程序非常不同。选用AWT工具包编写程序的程序员看到的都是原始界面，而且也无法获得先进的GUI编程支持，如果使用的话，就要提供每个平台上面所需的API，这将是一项庞大的工程。Swing则是完全用Java语言所写的程序，避免了界面元素重复的问题，只使用所有平台都支持的最基本的绘图机制。但是很多用户不知道如何在Java风格和Windows风格之间进行转换，结果造成了Java程序的界面在很多程序中非常特殊。<a class="innerlink" href="http://www.baike.com/wiki/%E8%8B%B9%E6%9E%9C%E7%94%B5%E8%84%91" title="苹果电脑">苹果电脑</a>已经提供了优化过的Java运行时程序，包含了Mac OS X的经典Aqua界面风格。</p><p><strong>性能问题</strong></p><p>由于Java编译器和虚拟机的不同对Java代码的性能影响比语言本身的影响大的多，所以统一讨论Java的程序的性能经常是有误导性的。据IBM的数据，在同样的硬件上2001年时的IBM JDK版本的性能是1996年的JDK版本的十倍左右。而即使是在同一时期，不同公司的JDK和JRE的性能也不一样，比如SUN、<a class="innerlink" href="http://www.baike.com/wiki/IBM" title="IBM">IBM</a>、BEA等公司都有自己开发的JDK和JRE。</p><p>Java语言的一些特性不可避免的有额外的性能代价，例如数组范围检查、运行时类型检查等等。Java程序的性能还会因为不同的动态复杂性和垃圾处理机制使用的多少而各有不同。如果JVM的实现比较优化的话，那么这些功能甚至可以增加内存分配的性能。这和总是使用STL或者托管C的程序的情况类似。</p><p>尽管如此，仍然有许多人认为Java的性能低。这部分归因于Sun公司最初的JVM实现使用未优化的解释机制来执行字节码。一些新版本的JVM使用Just-In-Time(JIT)编译器，在加载字节码的时候将其编译成针对运行环境的本地代码来实现一些<a class="innerlink" href="http://www.baike.com/wiki/%E6%9C%AC%E5%9C%B0%E7%BC%96%E8%AF%91" title="本地编译">本地编译</a>器的优化特性。Just-In-Time机制和本地编译的性能比较仍旧是一个有争议的话题。JIT编译需要很多时间，对于运行时间不长或者代码很多的大型程序并不适宜。但是不算JIT编译阶段的话，程序的运行性能在很多JVM下可以和本地编译的程序一争短长，甚至在一些计算比较密集的数值计算领域也是这样。目前，Java已经使用更先进的HotSpot技术来代替JIT技术，Java的性能有了更进一步的提升。另外，在使用-server选项运行java程序时，也可以对java进行更深入的优化，比如在运行时将调用较多的方法内联(inline)到程序中来提高运行速度，这就是所谓的“动态优化”，而本地编译器是无法做到这一点的；这也是一些java代码比对应用C/C等语言编写的本地代码运行的更快的原因之一。微软的<a class="innerlink" href="http://www.baike.com/wiki/.NET%E5%B9%B3%E5%8F%B0" title=".NET平台">.NET平台</a>也使用<a class="innerlink" href="http://www.baike.com/wiki/JIT%E7%BC%96%E8%AF%91%E5%99%A8" title="JIT编译器">JIT编译器</a>，所以也有类似问题。</p><p>Java的设计目的主要是安全性和可移植性，所以对于一些特性，比如对硬件架构和内存地址访问的直接访问都被去除了。如果需要间接调用这些底层功能的话，就需要使用JNI（Java本地接口）来调用本地代码，而间接访问意味着频繁调用这些特性时性能损失会很大，微软的.NET平台也有这样的问题。所以到目前为止，性能敏感的代码，例如驱动程序和3D视频游戏，还是大多使用本地编译，甚至直接以不直接支持面向对象的C语言或机器码编写。但最近已经有了许多用纯Java编写的3D游戏，其效果与用C语言编写的不相上下，例如“合金战士”（英文名:Chrome）。这主要是因为新版的Java 3D技术已经能像C一样调用硬件加速，也就是使用显卡来加速，无论是C还是Java语言写的<a class="innerlink" href="http://www.baike.com/wiki/3D%E6%B8%B8%E6%88%8F" title="3D游戏">3D游戏</a>都是使用<a class="innerlink" href="http://www.baike.com/wiki/%E6%98%BE%E5%8D%A1" title="显卡">显卡</a>及<a class="innerlink" href="http://www.baike.com/wiki/GPU" title="GPU">GPU</a>来处理，从而使得<a class="innerlink" href="http://www.baike.com/wiki/CPU" title="CPU">CPU</a>可以专注于其它方面的工作。</p><div class="content_h2"><h2 class="mar-t10">
<a name="25"> </a>Java运行时环境<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="25" target="_self">编辑</a>
</h2>
</div>
<p>Java运行时环境，即<a class="innerlink" href="http://www.baike.com/wiki/Java%20Runtime%20Environment" title="Java Runtime Environment">Java Runtime Environment</a>，简称为JRE，是在任何平台上运行Java编写的程序都需要用到的软件。终端用户可以以软件或者插件方式得到和使用JRE。Sun公司还发布了一个JRE的更复杂的版本，叫做JDK，即Java 2开发包，里面包含了Java需要的编译器、参考文档和调试器等。</p><p>JRE的成分：</p><p>Java的类库，包含了编译Java程序所需要的最核心文件。 </p><p>核心库文件，其中有 </p><p>数据结构的库，包括列表、字典和树等 </p><p>XML分析库 </p><p>安全方面应用库 </p><p>国际化和本地化应用库 </p><p>综合库文件，包含了程序员和其他系统通信的功能文件。 </p><p>JDBC，即Java数据库联通的API </p><p>JNDI，即Java命名和目录接口 </p><p>RMI和CORBA用于重新分发软件 </p><p>用户界面库文件，包含： </p><p>AWT，即抽象窗口开发包，提供了产生图形用户界面所需要的功能 </p><p>Swing库 </p><p>其他用于回访媒体文件、录音、截图的库 </p><p>一个用于执行软件的Java虚拟机 </p><p>插件，可以在浏览器里面使用 </p><p>JWS，可以让终端用户连接到互联网 </p><p>许可文件和文档 </p><div class="content_h2"><h2 class="mar-t10">
<a name="27"> </a>扩展和相关架构<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="27" target="_self">编辑</a>
</h2>
</div>
<p>扩展和与Java程序设计语言紧密相关的架构（按字母排序）</p><p>Groovy，一种用纯Java实现的<a class="innerlink" href="http://www.baike.com/wiki/%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80" title="脚本语言">脚本语言</a>，Python的强有力竞争者 </p><p>JAIN(Java API for Integrated Networks)Java综合网络应用程序开发接口 </p><p>JAI，(Java Advanced Imaging)Java进阶图像 </p><p><a class="innerlink" href="http://www.baike.com/wiki/JAXP" title="JAXP">JAXP</a>，(Java API for XML Processing)Java XML 处理 API </p><p>Java EE(原名J2EE)，Java平台企业版 </p><p>Java ME(原名J2ME)，Java平台微型版为PDA和智能手机开发的移动版本 </p><p>Java SE(原名J2SE)，Java平台标准版 </p><p>JDBC，(Java Database Connectivity)Java数据库联通 </p><p><a class="innerlink" href="http://www.baike.com/wiki/JDMK" title="JDMK">JDMK</a>，(Java Dynamic Management Kit)Java动态管理开发包 </p><p>JDO，(Java Data Objects)Java数据对象 </p><p>JJSF，Java服务器界面 </p><p><a class="innerlink" href="http://www.baike.com/wiki/JMF" title="JMF">JMF</a>，(Java Media Framework)Java媒体框架 </p><p>JMI，Java元数据接口 </p><p>JML，(Java Modeling Language)Java建模软件 </p><p>JMX，(Java Management Extensions)Java管理扩展 </p><p>JNDI，(Java Naming and Directory Interface)Java命名和目录接口 </p><p>JNI，Java原始界面 </p><p><a class="innerlink" href="http://www.baike.com/wiki/JOGL" title="JOGL">JOGL</a>，使用OpenGL的低阶三位游戏开发接口 </p><p>JSML，(Java Speech API Markup Language)Java的语音和标记语言 </p><p>JSP，(JavaServer Pages)Java服务器页面 </p><p>JSF，(JavaServer Faces) </p><p><a class="innerlink" href="http://www.baike.com/wiki/jxta" title="jxta">jxta</a>，P2P虚拟网络协议 </p><p>Java Card </p><p>Java3D，用于<a class="innerlink" href="http://www.baike.com/wiki/%E4%B8%89%E7%BB%B4%E6%B8%B8%E6%88%8F%E7%BC%96%E7%A8%8B" title="三维游戏编程">三维游戏编程</a>的高阶应用程序开发接口 </p><p><a class="innerlink" href="http://www.baike.com/wiki/JavaSpaces" title="JavaSpaces">JavaSpaces</a></p><p><a class="innerlink" href="http://www.baike.com/wiki/JINI" title="JINI">JINI</a>，Java网络分布计算结构 </p><p>Jiro </p><p>OSGi，(Dynamic Service Management and Remote Maintenance)动态服务管理和远程控制 </p><p>Rhino，用Java实现的JavaScript语言。 </p><p>Swing，Java的图像用户界面API </p><p>SWT，Standard Widget Toolkit，由IBM和Eclipse基金会主导开发的开源图像用户界面API </p><p><a class="innerlink" href="http://www.baike.com/wiki/SuperWaba" title="SuperWaba">SuperWaba</a>，手持设备的虚拟机程序 </p><p>总的来说java已经变得越来越庞大，或许是有些臃肿，在ROR等各种新的事物的出现的情况下，java或许将会将重点集中在企业级的开发上。</p><div class="content_h2"><h2 class="mar-t10">
<a name="29"> </a>相关技术<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="29" target="_self">编辑</a>
</h2>
</div>
<p>1、JDBC（Java Database Connectivity）提供连接各种关系数据库的统一接口。</p><p>2、EJB(Enterprise JavaBeans)使得开发者方便地创建、部署和管理跨平台的基于组件的企业应用。</p><p>3、Java RMI(Java <a class="innerlink" href="http://www.baike.com/wiki/Remote%20Method%20Invocation" title="Remote Method Invocation">Remote Method Invocation</a>)用来开发<a class="innerlink" href="http://www.baike.com/wiki/%E5%88%86%E5%B8%83%E5%BC%8FJava%E5%BA%94%E7%94%A8" title="分布式Java应用">分布式Java应用</a>程序。一个Java对象的方法能被远程Java虚拟机调用。这样，远程方法激活可以发生在对等的两端，也可以发生在客户端和服务器之间，只要双方的应用程序都是用Java写的。</p><p>4、Java IDL(Java Interface Definition Language)提供与CORBA(<a class="innerlink" href="http://www.baike.com/wiki/Common%20Object%20Request%20Broker%20Architecture" title="Common Object Request Broker Architecture">Common Object Request Broker Architecture</a>)的无缝的互操作性。这使得Java能集成异构的商务信息资源。</p><p>5、JNDI(Java Naming and Directory Interface)提供从Java平台到的统一的无缝的连接。这个接口屏蔽了企业网络所使用的各种命名和目录服务。</p><p>6、<a class="innerlink" href="http://www.baike.com/wiki/JMAPI" title="JMAPI">JMAPI</a>（Java Management API）为异构网络上系统、<a class="innerlink" href="http://www.baike.com/wiki/%E7%BD%91%E7%BB%9C" title="网络">网络</a>和服务管理的开发提供一整套丰富的对象和方法。</p><p>7、JMS(<a class="innerlink" href="http://www.baike.com/wiki/Java%20Message%20Service" title="Java Message Service">Java Message Service</a>)提供企业消息服务，如可靠的消息队列、发布和订阅通信、以及有关推拉（Push/Pull）技术的各个方面。</p><p>8、JTS(Java transaction Service)提供存取事务处理资源的开放标准，这些事务处理资源包括事务处理应用程序、事务处理管理及监控。</p><p>在Java技术中，值得关注的还有JavaBeans，它是一个开放的标准的组件体系结构，它独立于平台，但使用Java语言。一个JavaBean是一个满足JavaBeans规范的Java类，通常定义了一个现实世界的事物或概念。一个JavaBean的主要特征包括属性、方法和事件。通常，在一个支持JavaBeans规范的开发环境（如Sun <a class="innerlink" href="http://www.baike.com/wiki/Java%20Studio" title="Java Studio">Java Studio</a> 和IBM VisualAge for Java）中，可以可视地操作JavaBean，也可以使用JavaBean构造出新的JavaBean。JavaBean的优势还在于Java带来的可移植性。现在，EJB(Enterprise JavaBeans)将JavaBean概念扩展到Java服务端组件体系结构，这个模型支持多层的分布式对象应用。除了JavaBeans，典型的组件体系结构还有DCOM和CORBA，关于这些组件体系结构的深入讨论超出了本书的范围。</p><div class="content_h2"><h2 class="mar-t10">
<a name="31"> </a>java开源项目<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="31" target="_self">编辑</a>
</h2>
</div>
<p><a class="innerlink" href="http://www.baike.com/wiki/Spring%20Framework" title="Spring Framework">Spring Framework</a> 【Java开源 J2EE框架】</p><p>Spring 是一个解决了许多在J2EE开发中常见的问题的强大框架。Spring提供了管理业务对象的一致方法并且鼓励了注入对接口编程而不是对类编程的良好习惯。Spring的架构基础是基于使用JavaBean属性的Inversion of Control容器。然而，这仅仅是完整图景中的一部分：Spring在使用IoC容器作为构建完关注所有架构层的完整解决方案方面是独一无二的。Spring提供了唯一的数据访问抽象，包括简单和有效率的JDBC框架，极大的改进了效率并且减少了可能的错误。Spring的数据访问架构还集成了Hibernate和其他O/R mapping解决方案。Spring还提供了唯一的事务管理抽象，它能够在各种底层事务管理技术，例如JTA或者JDBC事务提供一个一致的编程模型。Spring提供了一个用标准Java语言编写的AOP框架，它给<a class="innerlink" href="http://www.baike.com/wiki/POJOs" title="POJOs">POJOs</a>提供了声明式的事务管理和其他企业事务--如果你需要--还能实现你自己的aspects。这个框架足够强大，使得应用程序能够抛开EJB的复杂性，同时享受着和传统EJB相关的关键服务。Spring还提供了可以和IoC容器集成的强大而灵活的MVC Web框架。【SpringIDE：Eclipse平台下一个辅助开发插件】。</p><p>WebWork【Java开源 Web框架】</p><p>WebWork是由OpenSymphony组织开发的，致力于组件化和代码重用的拉出式MVC模式J2EE Web框架。WebWork目前最新版本是2.1，现在的WebWork2.x前身是Rickard Oberg开发的WebWork，但现在WebWork已经被拆分成了<a class="innerlink" href="http://www.baike.com/wiki/XWork" title="XWork">XWork</a>1和WebWork2两个项目。Xwork简洁、灵活功能强大，它是一个标准的<a class="innerlink" href="http://www.baike.com/wiki/command%E6%A8%A1%E5%BC%8F" title="command模式">command模式</a>实现，并且完全从web层脱离出来。Xwork提供了很多核心功能：前端拦截机（interceptor），运行时表单属性验证，类型转换，强大的表达式语言（OGNL – the Object Graph Notation Language），IoC（Inversion of Control倒置控制）容器等。WebWork2建立在Xwork之上，处理HTTP的响应和请求。WebWork2使用ServletDispatcher将HTTP请求的变成Action(业务层Action类)，session（会话）application（应用程序）范围的映射，request请求参数映射。WebWork2支持多视图表示，视图部分可以使用JSP，Velocity，FreeMarker，JasperReports，XML等。在WebWork2.2中添加了对AJAX的支持，这支持是构建在DWR与Dojo这两个框架的基础之上。【EclipseWork：用于WebWork辅助开发的一个Eclipse插件】</p><p>Struts【Java开源 Web框架】</p><p>Struts是一个基于Sun J2EE平台的MVC框架，主要是采用Servlet和JSP技术来实现的。由于Struts能充分满足应用开发的需求，简单易用，敏捷迅速，在过去的一年中颇受关注。Struts把Servlet、JSP、自定义标签和信息资源(message resources)整合到一个统一的框架中，开发人员利用其进行开发时不用再自己编码实现全套MVC模式，极大的节省了时间，所以说Struts是一个非常不错的应用框架。【<a class="innerlink" href="http://www.baike.com/wiki/strutsIDE" title="strutsIDE">strutsIDE</a>：用于Struts辅助开发的一个Eclipse插件】</p><p>Hibernate【Java开源 持久层框架】</p><p>Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。Hibernate可以应用在任何使用JDBC的场合，既可以在Java的客户端程序实用，也可以在Servlet/JSP的Web应用中使用，最具革命意义的是，Hibernate可以在应用EJB的J2EE架构中取代CMP，完成数据持久化的重任。Eclipse平台下的Hibernate辅助开发工具:【Hibernate Synchronizer】【MiddlegenIDE】</p><p>Quartz【Java开源 Job调度】</p><p>Quartz是OpenSymphony开源组织在Job scheduling领域又一个开源项目,它可以与J2EE与J2SE应用程序相结合也可以单独使用。Quartz可以用来创建简单或为运行十个，百个，甚至是好几万个Jobs这样复杂的日程序表。Jobs可以做成标准的Java组件或 EJBs。Quartz的最新版本为Quartz 1.5.0。</p><p>Velocity【Java开源模板引擎】</p><p>Velocity是一个基于java的模板引擎（template engine）。它允许任何人仅仅简单的使用模板语言（template language）来引用由java代码定义的对象。当Velocity应用于web开发时，界面设计人员可以和java程序开发人员同步开发一个遵循MVC架构的web站点，也就是说，页面设计人员可以只关注页面的显示效果，而由java程序开发人员关注业务逻辑编码。Velocity将java代码从web页面中分离出来，这样为web站点的长期维护提供了便利，同时也为我们在JSP和PHP之外又提供了一种可选的方案。Velocity的能力远不止web站点开发这个领域，例如，它可以从模板（template）产生SQL和PostScript、XML，它也可以被当作一个独立工具来产生源代码和报告，或者作为其他系统的集成组件使用。Velocity也可以为Turbine web开发架构提供模板服务（template service）。Velocity Turbine提供一个模板服务的方式允许一个web应用以一个真正的MVC模型进行开发。【VeloEclipse：Velocity在Eclipse平台下的一个辅助开发插件】</p><p>IBATIS【Java开源持久层框架】</p><p>使用ibatis提供的ORM机制，对业务逻辑实现人员而言，面对的是纯粹的Java对象，这一层与通过Hibernate实现ORM而言基本一致，而对于具体的数据操作，Hibernate会自动生成SQL语句，而ibatis则要求开发者编写具体的SQL语句。相对Hibernate等“全自动”ORM机制而言，ibatis以SQL开发的工作量和数据库移植性上的让步，为系统设计提供了更大的自由空间。作为“全自动”ORM实现的一种有益补充，ibatis的出现显得别具意义。</p><p><a class="innerlink" href="http://www.baike.com/wiki/compiere" title="compiere">compiere</a> ERP&amp;CRM【Java开源ERP与CRM系统】</p><p>CompiereERP&amp;CRM为全球范围内的中小型企业提供综合型解决方案，覆盖从客户管理、供应链到财务管理的全部领域，支持多组织、多币种、多会计模式、多成本计算、多语种、多税制等国际化特性。易于安装、易于实施、易于使用。只需要短短几个小时，您就可以使用申购-采购-发票-付款、报价-订单-发票-收款、产品与定价、资产管理、客户关系、供应商关系、员工关系、经营业绩分析等强大功能了。</p><p>Roller Weblogger【Java开源Blog博客】</p><p>这个weblogging设计得比较精巧，源代码是很好的学习资料。它支持weblogging应有的特性如：评论功能，所见即所得HTML编辑，<a class="innerlink" href="http://www.baike.com/wiki/trackback" title="trackback">trackback</a>，提供页面模板，RSS syndication，<a class="innerlink" href="http://www.baike.com/wiki/Blogroll" title="Blogroll">Blogroll</a>管理和提供一个XML-RPC接口。</p><p>Eclipse【Java开源开发工具】</p><p>Eclipse平台是IBM向开发源码社区捐赠的开发框架，它之所以出名并不是因为IBM宣称投入开发的资金总数—4千万美元，而是因为如此巨大的投入所带来的成果：一个成熟的、精心设计的以及可扩展的体系结构。</p><p><a class="innerlink" href="http://www.baike.com/wiki/xplanner" title="xplanner">xplanner</a>【Java开源项目管理】</p><p>XPlanner一个基于Web的XP团队计划和跟踪工具。XP独特的开发概念如iteration、user stories等，XPlanner都提供了相对应的的管理工具，XPlanner支持XP开发流程，并解决利用XP思想来开发项目所碰到的问题。XPlanner特点包括：简单的模型规划，虚拟笔记卡(Virtual note cards),iterations、user stories与工作记录的追踪，未完成stories将自动迭代，工作时间追踪，生成团队效率，个人工时报表，SOAP界面支持。</p><p>HSQLDB【Java开源DBMS数据库】</p><p>HSQLDB(Hypersonic SQL)是纯Java开发的关系型数据库,并提供JDBC驱动存取数据。支持ANSI-92标准SQL语法。而且他占的空间很小。大约只有160K，拥有快速的数据库引擎。</p><p><a class="innerlink" href="http://www.baike.com/wiki/liferay" title="liferay">liferay</a>【Java开源Portal门户】</p><p>代表了完整的J2EE应用，使用了Web、EJB以及JMS等技术，特别是其前台界面部分使用Struts框架技术，基于XML的portlet配置文件可以自由地动态扩展，使用了Web Services来支持一些远程信息的获取，使用Apahce Lucene实现全文检索功能。</p><p><a class="innerlink" href="http://www.baike.com/wiki/jetspeed" title="jetspeed">jetspeed</a>【Java开源Portal门户】</p><p>Jetspeed是一个开放源代码的企业信息门户(EIP)的实现，使用的技术是Java和XML。用户可以使用浏览器，支持WAP协议的手机或者其它的设备访问Jetspeed架设的信息门户获取信息。Jetspeed扮演着信息集中器的角色，它能够把信息集中起来并且很容易地提供给用户。</p><p>JOnAS【Java开源J2EE服务器】</p><p>JOnAS是一个开放源代码的J2EE实现，在ObjectWeb协会中开发。整合了Tomcat或Jetty成为它的Web容器，以确保符合Servlet 2.3和JSP 1.2规范。JOnAS服务器依赖或实现以下的Java API：JCA、JDBC、JTA 、JMS、JMX、JNDI、JAAS、JavaMail 。</p><p><a class="innerlink" href="http://www.baike.com/wiki/JFox" title="JFox">JFox</a>3.0【Java开源J2EE服务器】</p><p>JFox是Open Source Java EE Application Server，致力于提供轻量级的Java EE应用服务器，从3.0开始，JFox提供了一个支持模块化的MVC框架，以简化EJB以及Web应用的开发。如果您正在寻找一个简单、轻量、高效、完善的Java EE开发平台，那么JFox正是您需要的。 </p><div class="content_h2"><h2 class="mar-t10">
<a name="33"> </a>实战应用<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="33" target="_self">编辑</a>
</h2>
</div>
<div class="img img_r" id="changeTheId-wrap-img-36" style="width: 231px;"><strong><a href="http://tupian.baike.com/a4_68_04_01300543767256146486049943684_jpg.html" target="_blank" title="JAVA"><img alt="JAVA" data-original="http://a4.att.hudong.com/68/04/01300543767256146486049943684_s.jpg" id="changeTheId-img-36" src="http://www.huimg.cn/lib/0.gif" title="JAVA"/></a><strong>JAVA</strong></strong></div><strong>【JAVA数组操作的常用工具类】<sup><a href="#hdtop_3" name="hdend_3" title="Java开发者必备工具大盘点">[3]</a></sup> </strong><p><a class="innerlink" href="http://www.baike.com/wiki/Java" title="Java">Java</a>提供了的Arrays类里包含了一些<a class="innerlink" href="http://www.baike.com/wiki/static" title="static">static</a>修饰方法可以直接操作数组，这个Arrays类里包含了提供了如下几个static修饰的方法(static修饰的方法可以直接通过类名调用)：</p><p>int binarySearch(type[] a，type key)：这个方法查询key元素值在a数组中出现的<a class="innerlink" href="http://www.baike.com/wiki/%E7%B4%A2%E5%BC%95" title="索引">索引</a>; 如果a数组不包含key元素值，则返回-1.调用该方法时要求数组中元素已经按升序排列，这样才能得到正确结果。</p><p>binarySearch(type[] a，int fromIndex，int toIndex，type key)：这个方法与前一个方法类似，但它只搜索a数组中formIndex到toIndex索引的元素。调用该方法时要求数组中元素已经按升序排列，这样才能得到正确结果。</p><p>type[] copyOf(type[] original，int newLength)：这个方法将会把original数组复制成一个新数组，其中length是新数组的长度。如果length小于original数组的长度，则新数组就是原数组的前面length个元素; 如果length大于original数组的长度，则新数组的前面元素就是原数组的所个元素，后面补充0(数值型)、false(布尔型)或者null(引用型)。</p><p>type[] copyOfRange(type[] original，int from，int to)：这个方法与前面方法相似，但这个方法只复制original数组的from索引到to索引的元素。</p><p>boolean equals(type[] a，type[] a2)：如果a数组和a2数组的长度相等，而且a数组和a2数组的数组元素也一一相同，该方法将返回true。</p><p>void fill(type[] a，type val)：该方法将会把a数组所有元素值都赋值为val。</p><p>void fill(type[] a，int fromIndex， int toIndex， type val)：该方法与前一个方法的作用相同，区别只是该方法仅仅将a数组的fromIndex到toIndex索引的数组元素赋值为val。</p><p>void sort(type[] a)：该方法对a数组的数组元素进行排序。</p><p>void sort(type[] a，int fromIndex，int toIndex)：该方法与前一个方法相似，区别是该方法仅仅对fromIndex到toIndex索引的元素进行排序。</p><p>String toString(type[] a)：该方法将会一个数组转换成一个字符串。该方法按顺序把多个数组元素连缀在一起，多个数组元素使用英文逗号(，)和空格隔开。(利用该方法可以很清楚地看到各数组元素)</p><p>下面程序示范了Arrays<a class="innerlink" href="http://www.baike.com/wiki/%E7%B1%BB" title="类">类</a>的用法：</p><p>public class TestArrays <br/>　　{<br/>　　public static void main(String[] args)<br/>　　{<br/>　　//定义一个a数组<br/>　　int[] a = new int[]{3, 4 , 5, 6}; <br/>　　//定义一个a2数组<br/>　　int[] a2 = new int[]{3, 4 , 5, 6}; <br/>　　//a数组和a2数组的长度相等，每个元素依次相等，将输出true<br/>　　System.out.println("a数组和a2数组是否相等：" Arrays.equals(a , a2)); <br/>　　//通过复制a数组，生成一个新的b数组<br/>　　int[] b = Arrays.copyOf(a, 6); <br/>　　System.out.println("a数组和b数组是否相等：" Arrays.equals(a , b)); <br/>　　//输出b数组的元素，将输出[3, 4, 5, 6, 0, 0]<br/>　　System.out.println("b数组的元素为：" Arrays.toString(b)); <br/>　　//将b数组的第3个元素(包括)到第5个元素(不包括)赋为1<br/>　　Arrays.fill(b , 2, 4 , 1); //fill方法可一次对多个数组元素进行批量赋值<br/>　　//输出b数组的元素，将输出[3, 4, 1, 1, 0, 0]<br/>　　System.out.println("b数组的元素为：" Arrays.toString(b)); <br/>　　//对b数组进行排序<br/>　　Arrays.sort(b); <br/>　　//输出b数组的元素，将输出[0, 0, 1, 1, 3, 4]<br/>　　System.out.println("b数组的元素为：" Arrays.toString(b)); <br/>　　}<br/>　　}</p><p>注意：Arrays类处于java.util包下，为了在程序中使用Arrays类，必须在程序中导入java.util.Arrays类。</p><p>除此之外，在System类里也包含了一个static void arraycopy(Object src，int srcPos，Object dest， int destPos，int length)方法，该方法可以将src数组里的元素值赋给dest数组的元素，其中srcPos指定从src数组的第几个元素开始赋值，length参数指定将src数组的多少个元素赋给dest数组的元素。</p><p><strong>【浅析Hibernate下数据批量处理方法】</strong></p><p>很多人都对Java在批量数据的处理方面是否是其合适的场所持有怀疑的念头，由此延伸，那么就会认为<a class="innerlink" href="http://www.baike.com/wiki/ORM" title="ORM">ORM</a>可能也不是非凡适合数据的批量处理。其实，我想假如我们应用得当的话，完全可以消除ORM批量处理性能问题这方面的顾虑。下面以<a class="innerlink" href="http://www.baike.com/wiki/Hibernate" title="Hibernate">Hibernate</a>为例来做为说明，假如我们真的不得不在Java中使用Hibernate来对数据进行批量处理的话。 向数据库插入100 000条数据，用Hibernate可能像这样：</p><p>　　Session session = sessionFactory.openSession(); <br/>　　Transaction tx = session.beginTransaction(); <br/>　　for ( int i=0; i＜100000; i ) {<br/>　　Customer customer = new Customer(.....); <br/>　　session.save(customer); }<br/>　　tx.commit(); <br/>　　session.close(); </p><p>大概在运行到第50 000条的时候，就会出现内存溢出而失败。这是Hibernate把最近插入的Customer都以session-level cache在内存做缓存，我们不要忘记Hiberante并没有限制first-level cache的缓存大小。</p><p>持久对象实例被治理在事务结束时，此时Hibernate与数据库同步任何已经发生变化的被治理的的对象。</p><p>Session实现了异步write-behind，它答应Hibernate显式地写操作的批处理。这里，我给出Hibernate如何实现批量插入的方法：</p><p>首先，我们设置一个合理的JDBC批处理大小，hibernate.jdbc.batch_size 20。然后在一定间隔对Session进行flush()和clear()。</p><p>Session session = sessionFactory.openSession(); <br/>　　Transaction tx = session.beginTransaction(); <br/>　　for ( int i=0; i＜100000; i ) {<br/>　　Customer customer = new Customer(.....); <br/>　　session.save(customer); <br/>　　if ( i % 20 == 0 ) {<br/>　　//flush 插入数据和释放内存:<br/>　　session.flush(); session.clear(); }<br/>　　}<br/>　　tx.commit(); <br/>　　session.close(); </p><p>那么，关于怎样删除和更新数据呢。那好，在Hibernate2.1.6或者更后版本，scroll() 这个方法将是最好的途径：</p><p>　　Session session = sessionFactory.openSession(); <br/>　　Transaction tx = session.beginTransaction(); <br/>　　ScrollableResults customers = session.getNamedQuery("GetCustomers")<br/>　　.scroll(ScrollMode.FORWARD_ONLY); <br/>　　int count=0; <br/>　　while ( customers.next() ) {<br/>　　Customer customer = (Customer) customers.get(0); <br/>　　customer.updateStuff(...); <br/>　　if ( count % 20 == 0 ) {<br/>　　//flush 更新数据和释放内存:<br/>　　session.flush(); session.clear(); } }<br/>　　tx.commit(); session.close(); </p><p>这种做法并不困难，也不算不优雅。请注重，假如Customer启用了second-level caching，我们仍然会有一些内存治理的问题。原因就是对于用户的每一次插入和更新，Hibernate在事务处理结束后不得不通告second-level cache。因此，我们在批处理情况下将要禁用用户使用缓存。</p><p><strong>【如何把Java程序编译成.exe文件】</strong></p><p>常常在网上看到有人询问：如何把java程序编译成.exe 文件。通常回答只有两种，一种是制作一个可执行的JAR文件包，然后就可以像.chm 文档一样双击运行了；而另一种是使用JET来进行编译。但是JET是要用钱买的，而且据说JET也不是能把所有的Java程序都编译成执行文件，性能也要打些折扣。所以，使用制作可执行JAR文件包的方法就是最佳选择了，何况它还能保持Java的跨平台特性。</p><p>下面就来看看什么是JAR文件包吧：</p><p>1.JAR文件包</p><p>JAR文件就是Java Archive File，顾名思意，它的应用是与Java息息相关的，是Java的一种文档格式。JAR文件非常类似ZIP文件——准确的说，它就是ZIP文件，所以叫它文件包。JAR文件与ZIP文件唯一的区别就是在JAR文件的内容中，包含了一个META-INF/MANIFEST.MF文件，这个文件是在生成JAR文件的时候自动创建的。举个例子，如果我们具有如下目录结构的一些文件：</p><p>　　==</p><p>　　`-- test</p><p>　　　 `-- Test.class</p><p>把它压缩成ZIP文件test.zip，则这个ZIP文件的内部目录结构为：</p><p>　　test.zip</p><p>　　`-- test</p><p>　　　 `-- Test.class</p><p>如果我们使用JDK的jar命令把它打成JAR文件包test.jar，则这个JAR文件的内部目录结构为：</p><p>　　test.jar</p><p>　　|-- META-INF</p><p>　　|　 `-- MANIFEST.MF</p><p>　　`-- test</p><p>　　　　`--Test.class</p><p>2. 创建可执行的JAR文件包</p><p>制作一个可执行的JAR文件包来发布你的程序是JAR文件包最典型的用法。</p><p>Java程序是由若干个.class 文件组成的。这些.class 文件必须根据它们所属的包不同而分级分目录存放；运行前需要把所有用到的包的根目录指定给CLASSPATH环境变量或者java命令的-cp参数；运行时还要到控制台下去使用java命令来运行，如果需要直接双击运行必须写Windows的批处理文件(.bat) 或者Linux的Shell程序。因此，许多人说，Java 是一种方便开发者苦了用户的程序设计语言。</p><p>其实不然，如果开发者能够制作一个可执行的JAR文件包交给用户，那么用户使用起来就方便了。在Windows下安装JRE(Java Runtime Environment)的时候，安装文件会将.jar 文件映射给<a class="innerlink" href="http://www.baike.com/wiki/javaw.exe" title="javaw.exe">javaw.exe</a>打开。那么，对于一个可执行的JAR文件包，用户只需要双击它就可以运行程序了，和阅读.chm 文档一样方便(.chm 文档默认是由 hh.exe 打开的)。那么，现在的关键，就是如何来创建这个可执行的JAR文件包。</p><p>创建可执行的 JAR 文件包，需要使用带 cvfm 参数的jar命令，同样以上述test目录为例，命令如下：</p><p>jar cvfm test.jar manifest.mf test</p><p>这里test.jar和manifest.mf 两个文件，分别是对应的参数f和m，其重头戏在manifest.mf。因为要创建可执行的JAR文件包，光靠指定一个manifest.mf文件是不够的，因为MANIFEST是JAR文件包的特征，可执行的JAR文件包和不可执行的JAR文件包都包含MANIFEST。关键在于可执行JAR文件包的MANIFEST，其内容包含了 Main-Class一项。这在MANIFEST中书写格式如下：</p><p>Main-Class：可执行主类全名(包含包名)</p><p>例如，假设上例中的Test.class是属于test包的，而且是可执行的类(定义了 public static void main(String[]) 方法)，那么这个manifest.mf可以编辑如下：</p><p>Main-Class：test.Test &lt;回车&gt;</p><p>这个 manifest.mf 可以放在任何位置，也可以是其它的文件名，只需要有 Main-Class: test.Test 一行，且该行以一个回车符结束即可。创建了 manifest.mf 文件之后，我们的目录结构变为：</p><p>　　==</p><p>　　|-- test</p><p>　　|　 `-- Test.class</p><p>　　`-- manifest.mf</p><p>这时候，需要到test目录的上级目录中去使用jar命令来创建 JAR 文件包。也就是在目录树中使用“==”表示的那个目录中，使用如下命令：</p><p>jar cvfm test.jar manifest.mf test</p><p>之后在“==”目录中创建了 test.jar，这个test.jar就是执行的JAR文件包。运行时只需要使用java -jar test.jar命令即可。</p><p>需要注意的是，创建的JAR文件包中需要包含完整的、与Java程序的包结构对应的目录结构，就像上例一样。而 Main-Class 指定的类，也必须是完整的、包含包路径的类名，如上例的 test.Test；而且在没有打成 JAR 文件包之前可以使用java &lt;类名&gt; 来运行这个类，即在上例中 java test.Test 是可以正确运行的 (当然要在 CLASSPATH 正确的情况下)。</p><p>【<b>Java是什么？快速入门，助力屌丝"逆袭"</b>】</p><p><br/>
Java是一种可以编写跨平台应用软件的面向对象的程序设计语言，是目前世界上最流行的计算机编程语言。Java的应用可以说是无处不在，从桌面办公应用到网络数据库等应用，从PC到嵌入式移动平台等处处都有Java的身影。 </p><p>
Java由四方面组成：Java编程语言、Java类文件格式、Java虚拟机和Java应用程序接口(Java API)。 </p><p>
Java有三个版本：标准版(J2SE)、企业版(J2EE)和微型版(J2ME)，J2SE就是Java的标准版，主要用于桌面应用软件的编程；J2ME主要应用于嵌入式系统开发，如手机、PDA、家用电器等方面的编程；J2EE则应用于大量的企业级应用，如网站、ERP系统等。其中以J2EE和J2ME应用最为广泛。<br/></p><p><strong>【如何使用Java编写多线程程序】</strong></p><p>线程呢可以看作单独地占有CPU时间来执行相应的<a class="innerlink" href="http://www.baike.com/wiki/%E4%BB%A3%E7%A0%81" title="代码">代码</a>的。当然一个程序可以是多线程的，多线程的各个线程看上去像是并行地独自完成各自的工作，就像一台一台计算机上运行着多个处理机一样。</p><p>1、什么是线程</p><p>线程呢可以看作单独地占有CPU时间来执行相应的代码的。当然一个程序可以是多线程的，多线程的各个线程看上去像是并行地独自完成各自的工作，就像一台一台计算机上运行着多个处理机一样。在多处理机计算机上实现多线程时，它们确实可以并行工作，而且采用适当的分时策略可以大大提高程序运行的效率。想了解更多资料可以加入java高手学习交流群，前面250中间941后面060。</p><p>2、为什么要使用多线程</p><p>顺序执行程序和采用多线程并行执行程序相比，效率是可以大大地提高。</p><p>3、java中是如何实现多线程</p><p>在java语言中的线程系统是java语言自建的， 因为java中有专门的支持多线程的API库，所以很容易写一个支持线程的程序。在使用java创建线程的时候，可以生成一个Thread类或者他的子类对象，并给这个对象发送start()消息(程序可以向任何一个派生自 Runnable 接口的类对象发送 start() 消息的)，这样一来程序会一直执行，直到run返回为止，此时该线程就停止了。</p><p>在这里我们用多线程中最典型的例子，生产者与消费者问题。在这个例子里面我们定义了生产者Producer，<a class="innerlink" href="http://www.baike.com/wiki/%E6%B6%88%E8%B4%B9%E8%80%85" title="消费者">消费者</a>Consumer和仓库Warehouse三个类，在整个程序的生命周期里，生产者随机地制造出产品放到仓库中，消费者也是随即地从仓库中取出产品。</p><p>import exception.ProducerConsumerException; <br/>　　/**<br/>　　* Consumer.java<br/>　　* Consumer<br/>　　* By: Jiabo<br/>　　* Date: Mar 21, 2004<br/>　　* Time: 2:47:58 PM<br/>　　*/<br/>　　public class Consumer extends Thread {<br/>　　private Warehouse warehouse; <br/>　　private String id; <br/>　　public Consumer(Warehouse warehouse, String id) {<br/>　　this.warehouse = warehouse; <br/>　　this.id = id; <br/>　　}<br/>　　public void run() {<br/>　　int tmp = (int) Math.random() * 10; <br/>　　try {<br/>　　warehouse.get(tmp); <br/>　　System.out.println("Consumer # " this.id " get " tmp); <br/>　　} catch (ProducerConsumerException e) {<br/>　　e.printStackTrace(); <br/>　　}<br/>　　try {<br/>　　sleep((int) (Math.random() * 100)); <br/>　　} catch (InterruptedException e) {<br/>　　e.printStackTrace(); <br/>　　}<br/>　　}</p><p>在这个类中，值得注意的一点是run方法中必须使用try-catch，因为，消费者从仓库中取东西时有可能诸如仓库中的储量不够得异常，在消费者里面也是一样，只不过异常变为<a class="innerlink" href="http://www.baike.com/wiki/%E4%BB%93%E5%BA%93" title="仓库">仓库</a>已满。</p><p>　　import exception.*; <br/>　　/**<br/>　　* Producer.java<br/>　　* Producer<br/>　　* By: Jiabo<br/>　　* Date: Mar 21, 2004<br/>　　* Time: 2:47:45 PM<br/>　　*/<br/>　　public class Producer extends Thread {<br/>　　private Warehouse warehouse; <br/>　　private String id; <br/>　　public Producer(Warehouse warehouse, String id) {<br/>　　this.warehouse = warehouse; <br/>　　this.id = id; <br/>　　}<br/>　　public void run() {<br/>　　int tmp = (int) Math.random() * 10; <br/>　　if (tmp != 0) {<br/>　　try {<br/>　　warehouse.put(tmp); <br/>　　System.out.println("Consumer # " this.id " put " tmp); <br/>　　} catch (ProducerConsumerException e) {<br/>　　e.printStackTrace(); <br/>　　}<br/>　　}<br/>　　try {<br/>　　sleep((int) (Math.random() * 100)); <br/>　　} catch (InterruptedException e) {<br/>　　e.printStackTrace(); <br/>　　}<br/>　　}<br/>　　}</p><p>最重要的一部分在Warehouse类，如上所说为了保证get何set的原子性，在这里使用了synchronized关键字，并且在操作时抛出了可能跑出的异常。</p><p>import exception.*; <br/>　　/**<br/>　　* Warehouse<br/>　　* By: Jiabo<br/>　　* Date: Mar 21, 2004<br/>　　* Time: 2:48:10 PM<br/>　　*/<br/>　　public class Warehouse {<br/>　　// max capability of the  </p><p>warehouse<br/>　　private int MAX; <br/>　　private int contents; <br/>　　// init with max capacity<br/>　　public Warehouse(int max) {<br/>　　this.MAX = max; <br/>　　this.contents = 0; <br/>　　}<br/>　　public synchronized void get(int amount) throws ProducerConsumerException {<br/>　　// the amount you want to get is bigger than the contends that the warehouse stores<br/>　　if (amount ＞ this.contents) {<br/>　　throw new NotEnoughGoodsException(); <br/>　　}<br/>　　amount -= contents; <br/>　　}<br/>　　public synchronized void put(int amount) throws ProducerConsumerException {<br/>　　// the amount you want to put is out of the capability of the warehouse<br/>　　if (amount ＞ (this.MAX - this.contents)) {<br/>　　throw new WarehouseFullException(); <br/>　　} else if (this.contents == 0) {<br/>　　// warehouse is empty<br/>　　throw new WarehouseEmptyException(); <br/>　　}<br/>　　amount = contents; <br/>　　}<br/>　　}</p><div class="content_h2"><h2 class="mar-t10">
<a name="35"> </a>java模拟器<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="35" target="_self">编辑</a>
</h2>
</div>
<p>Java<a class="innerlink" href="http://www.baike.com/wiki/%E6%89%8B%E6%9C%BA%E6%B8%B8%E6%88%8F%E6%A8%A1%E6%8B%9F%E5%99%A8" title="手机游戏模拟器">手机游戏模拟器</a>主要针对诺基亚S60系列手机以及其他大屏手机（小屏游戏也可运行，但不能全屏显示），是一款非常简单而且实用的JAVA游戏模拟器，可以正常运行绝大部分JAVA手机游戏。注：暂不支持游戏后缀名为sis的游戏。程序的使用是傻瓜式的，在电脑上安装好以后，所有的游戏jar文件都会和模拟器相关连，直接双击游戏jar文件就可以进入模拟器玩游戏啦。电脑的小数字键盘和方向键就可以直接控制游戏，与模拟器的按键相对应，当然也可以用鼠标直接点击控制。</p><div class="content_h2"><h2 class="mar-t10">
<a name="37"> </a>java学习书籍<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="37" target="_self">编辑</a>
</h2>
</div>
<p>Java数据库高级编程宝典</p><p><a class="innerlink" href="http://www.baike.com/wiki/JAVA%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF" title="JAVA核心技术">JAVA核心技术</a>第八版(core java 8th)</p><p><a class="innerlink" href="http://www.baike.com/wiki/Java%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B" title="Java程序设计基础教程">Java程序设计基础教程</a></p><p>Java distribute computing</p><p>15天学会jQuery </p><p><a class="innerlink" href="http://www.baike.com/wiki/J2EE%E8%AF%BE%E7%A8%8B%E8%AE%BE%E8%AE%A1" title="J2EE课程设计">J2EE课程设计</a>指导</p><p>JMS简明教程 </p><p>JDK1.6 API中文版(CHM格式) </p><p>JDK 1.4 Tutorial 　　</p><p>JAVA核心技术：针对Java SE6</p><div class="content_h2"><h2 class="mar-t10">
<a name="39"> </a>参见<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="39" target="_self">编辑</a>
</h2>
</div>
<p>计算机科学课程列表 <br/>JNI(Java Native Interface)Java本地接口</p><div class="content_h2"><h2 class="mar-t10">
<a name="41"> </a>参考文献<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="41" target="_self">编辑</a>
</h2>
</div>
<p>Jon Byous, Java technology: The early years. Sun Developer Network, no date [ca. 1998]. Retrieved April 22, 2005. </p><p>James Gosling, A brief history of the Green project. Java.net, no date [ca. Q1/1998]. Retrieved April 22, 2005. </p><p>James Gosling, Bill Joy, Guy Steele, and Gilad Bracha, The <a class="innerlink" href="http://www.baike.com/wiki/JAVA%20language" title="JAVA language">JAVA language</a> specification, second edition. Addison-Wesley, 2000. ISBN 0201310082. </p><p>James Gosling, Bill Joy, Guy Steele, and Gilad Bracha, The Java language specification, third edition. Addison-Wesley, 2005. ISBN 0321246780. </p><p>Tim Lindholm and Frank Yellin. The Java Virtual Machine specification, second edition. Addison-Wesley, 1999. ISBN 0201432943. </p><p><a class="innerlink" href="http://www.baike.com/wiki/%E8%94%A1%E5%AD%A6%E9%95%9B" title="蔡学镛">蔡学镛</a>，〈从编译器与 VM 角度分析 Java2 v5.0 语言的新特色〉 </p><div class="content_h2"><h2 class="mar-t10">
<a name="43"> </a>其他应用<span class="f18">/JAVA[JAVA开发] </span><a class="bjbd" href="#" secid="43" target="_self">编辑</a>
</h2>
</div>
<p><strong>升阳公司</strong></p><p>升阳（Sun Microsystems）公司主页（英文） </p><p>升阳公司中国主页 </p><p>Java的官方网站（英文） </p><p>Java主页（英文） </p><p>Java白皮书（英文） </p><p><strong>技术开发</strong></p><p>基金会的Jakarta项目 </p><p><a class="innerlink" href="http://www.baike.com/wiki/JavaEye" title="JavaEye">JavaEye</a>---深度技术社区 </p><p>Java家-中文Java门户</p><p>Matrix Java </p><p>Java研究组织</p><p>CSDN Java频道 </p><p>CSDN JAVA<a class="innerlink" href="http://www.baike.com/wiki/%E7%A4%BE%E5%8C%BA" title="社区">社区</a></p><p>中文JAVA技术网 </p><p>JAVA中文站 </p><p>双子星Java开源技术门户</p><p>Java resource directory, Java API Specifications, Latest Java News </p><p>Java例程网 </p><p>免费网上Java书 </p><p>名词解释:JavaFX </p><p>名词解释:JavaFX Mobile </p><p>Full Java Tutorial</p><p>Java 学习笔记</p><p><strong>集成开发环境IDE</strong></p><p>BEA Workshop–商业软件, BEA Systems公司开发, 与BEA WebLogic服务器整合。 </p><p><a class="innerlink" href="http://www.baike.com/wiki/BlueJ" title="BlueJ">BlueJ</a>–免费软件 目前由肯特大学和迪肯大学的联合小组负责维护。 </p><p>Eclipse–免费开源软件, Eclipse Foundation开发。 </p><p><a class="innerlink" href="http://www.baike.com/wiki/IntelliJ%20IDEA" title="IntelliJ IDEA">IntelliJ IDEA</a>–商业软件, <a class="innerlink" href="http://www.baike.com/wiki/JetBrains" title="JetBrains">JetBrains</a>公司开发。 </p><p>JBuilder–商业软件(有试用版), Borland公司开发。 </p><p>JCreator–商业软件(有试用版), Xinox公司开发 </p><p><a class="innerlink" href="http://www.baike.com/wiki/JDeveloper" title="JDeveloper">JDeveloper</a>–<a class="innerlink" href="http://www.baike.com/wiki/%E5%95%86%E4%B8%9A%E8%BD%AF%E4%BB%B6" title="商业软件">商业软件</a>,Oracle Corporation公司开发, 与Oracle Application Server服务器整合。 </p><p>NetBeans–免费开源软件,NetBeans.org社区开发。 </p><p>Sun Java Studio Enterprise–商业软件(available free to members of the free Sun Developer Network), Sun Microsystems公司开发。 </p><p>WebSphere Developer &amp; Development Studio–商业软件, IBM开发, 与WebSphere Application Server服务器整合。 </p><p><strong>一般应用</strong></p><p>升阳公司的新闻组 </p><p>维基Java </p><p>Java基础应用 </p><p><strong>Java历史</strong></p><p>Java的早年 </p><p><a class="innerlink" href="http://www.baike.com/wiki/%E7%BB%BF%E8%89%B2%E8%AE%A1%E5%88%92" title="绿色计划">绿色计划</a>概要 </p><p>Java传奇 </p><p>Java历史 </p><p><strong>Java评论</strong></p><p>Java Cover </p><p>Java真烂 </p><p>Java的阴暗面 </p><audio controls="controls" style="display: none;"></audio>
<div class="clear"></div>
</div>
<div id="hd_ad_doc_110"> </div>
<!--google_ad_section_end-->
<div id="hd_ad_doc_3"> </div>
<div style="display:;"><div>
<div id="hd_ad_doc_27"> </div>
<div id="hd_ad_doc_28"> </div>
</div></div>
<div id="hd_ad_doc_19"> </div>
<div appcode="ZxZzyXLCP">
</div>
<div id="hd_ad_doc_63"> </div>
<div class="zoom" id="figure">
<h3>附图</h3>
<span class="more grayc" id="moreGrayc"><a name="_figurea"> </a><a href="javascript:void(0)" id="addFigure" style="display:none;">上传图片</a><a href="http://so.baike.com/s/tupian/JAVA%5BJAVA%E5%BC%80%E5%8F%91%5D" id="moreId" target="_blank">更多&gt;&gt;</a></span><div class="scrollX">
<div class="scroll-con" style="height:200px;"><ul class="fodder-img" id="figul" style="width:10000px;position: absolute;"><li>
<a class="fimg" href="http://tupian.baike.com/a1_02_39_16300309316150146312398704901_jpg.html?prd=zhengwenye_left_futu_tupian" target="_blank"><img alt="java" src="http://a1.att.hudong.com/02/39/16300309316150146312398704901_140.jpg"/></a><a href="http://tupian.baike.com/a1_02_39_16300309316150146312398704901_jpg.html?prd=zhengwenye_left_futu_miaoshu" target="_blank">java</a>
</li></ul></div>
<p class="arrow gray9" id="fuTuPageId" style="display:none;"><i><span id="fuTuPageNumSpan"></span></i><span id="fuTuPageSizeSpan"></span><em class="btn-prev" id="fuTuBtnPrev"></em><em class="btn-next" id="fuTuBtnNext"></em></p>
</div>
</div>
<div class="zoom" id="fodder"><h3>
<span class="r grayc"><a href="http://v.baike.com/videocenter/initadd?docTitle=JAVA%5BJAVA%E5%BC%80%E5%8F%91%5D" target="_blank">添加视频</a> | <a href="http://tupian.baike.com/zutu/createZutuView?docTitle=JAVA%5BJAVA%E5%BC%80%E5%8F%91%5D" target="_blank">添加图册</a></span>相关影像</h3></div>
<div class="relevantinfo">
<script type="text/javascript">
			 function goUrl(url){
			  if(url == "" || url.length == 0){
			  	return;
			  }
			  StatVirtualTraffic(document.referrer,window.location,'stat_hdstat_onclick_new_doccomments');
			  window.open(url,'_blank');
			 }
			</script>
<dl class="reference bor-no">
<dt>参考资料</dt>
<dd>
<span>[1]</span><a href="#hdend_1" name="hdtop_1">^</a><label><a href="javascript:void(0)" onclick="goUrl('http://www.doc88.com/p-633428029458.html')">道客巴巴：java的优势介绍<i class="ljico"> </i></a></label><span class="gray6 r">引用日期：2016-05-14</span>
</dd>
<dd>
<span>[2]</span><a href="#hdend_2" name="hdtop_2">^</a><label><a href="javascript:void(0)" onclick="goUrl('http://tech.sina.com.cn/it/2009-04-20/20163020181.shtml')">新浪科技：详讯：甲骨文将以74亿美元收购Sun<i class="ljico"> </i></a></label><span class="gray6 r">引用日期：2016-08-03</span>
</dd>
<dd>
<span>[3]</span><a href="#hdend_3" name="hdtop_3">^</a><label><a href="javascript:void(0)" onclick="goUrl('http://www.xiazaizhijia.com/news/20150404/75073.html')">Java开发者必备工具大盘点<i class="ljico"> </i></a></label><span class="gray6 r">引用日期：2016-05-14</span>
</dd>
</dl>
</div>
<div class="relevantinfo">
<script type="text/javascript">
		 function goUrl(url){
		  StatVirtualTraffic(document.referrer,window.location,'stat_hdstat_onclick_new_doccomments');
		  window.open(url,'_blank');
		 }
		</script>
<dl class="reference bor-no">
<dt>扩展阅读</dt>
<dd>
<em>1</em>JAVA的开源项目<a><input name="refrenceurlinput" onclick="goUrl('http://www.htbenet.cn/zaixianjiaocheng/java/950.html')" readonly="" type="text" value="http://www.htbenet.cn/zaixianjiaocheng/java/950.html"/></a>
</dd>
</dl>
</div>
<div class="relevantinfo" id="catp_bottom">
<dl id="show_tag" style="display:block;">
<dt>
<span class="l">开放分类
                   
				    <em class="onoff">
<a href="javascript:void(0)" id="open_tag" style="display:none;">展开<i class="open"></i></a> <a href="javascript:void(0)" id="close_tag" style="display:none;">收起<i class="close"></i></a>
</em>
</span><a class="r completetaghref" href="javascript:void(0)">我来补充</a>
</dt>
<dd class="h27"><a href="http://fenlei.baike.com/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%AF%AD%E8%A8%80/?prd=zhengwenye_left_kuozhan_kaifangfenlei">计算机语言</a></dd>
</dl>
<dl id="edit_tag" style="display:none;">
<dt id="edit_tag_dt"><span class="l">开放分类</span></dt>
<dd>
<input class="input-textarea" maxlength="20" name="tag" onblur="this.setAttribute('value',this.value);" type="text" value="计算机语言"/> <a href="javascript:void(0)" id="_removeTag" onclick="removeTag(this)">[删除]</a>
</dd>
</dl>
<dl id="show_thesaurus" style="display:none;"><dt id="show_thesaurus_dt">
<span class="l">同义词
		
				<em class="onoff">
<a href="javascript:void(0)" id="open_thesaurus" style="display:none;">展开<i class="open"></i></a> <a href="javascript:void(0)" id="close_thesaurus" style="display:none;">收起<i class="close"></i></a>
</em>
</span><a name="show_thesaurus_test"></a>
</dt></dl>
<dl id="edit_thesaurus" style="display:none;z-index:11;"><dt id="thesaurus_edit_dt"><span class="l">同义词</span></dt></dl>
</div>
<p class="place-bottom zoom"></p>
<p class="point l-he22 descriptionP">互动百科的词条（含所附图片）系由网友上传，如果涉嫌侵权，请与客服联系，我们将按照法律之相关规定及时进行处理。未经许可，禁止商业网站等复制、抓取本站内容；合理使用者，请注明来源于www.baike.com。</p>
<div id="hd_ad_doc_32"> </div>
<input name="type" type="hidden" value="doc"/><input id="doc_title" name="doc_title" type="hidden" value="JAVA[JAVA开发]"/><input id="docidencry" name="docidencry" type="hidden" value="MY310agFRYGYMfVRl"/><input id="_loginstate" name="_loginstate" type="hidden" value="0"/><div class="bklog">
<p>登录后使用互动百科的服务，将会得到个性化的提示和帮助，还有机会和专业认证智愿者沟通。</p>
<a class="bklogBtn" href="#" id="commentLoginButton">互动百科用户登录</a><a class="bkregBtn" href="http://passport.baike.com/user/userRegister.jsp" target="_self">注册</a>
</div>
<div id="hd_ad_doc_33"> </div>
</div>
<div class="r w-300">
<div id="editmore">此词条还可添加 
			<a href="javascript:void(0);" id="addDocInfoTemplethref">信息模块</a>
</div>
<div id="hd_ad_doc_92"> </div>
<div id="hd_ad_doc_4"> </div>
<div class="doc-img">
<a href="http://tupian.baike.com/doc/JAVA%5BJAVA%E5%BC%80%E5%8F%91%5D/a3_17_13_20300543897352146908130892747_jpg.html" target="_blank" title="JAVA"><img alt="JAVA" src="http://a3.att.hudong.com/17/13/20300543897352146908130892747_s.jpg" title="JAVA"/></a><a class="card" href="http://tupian.baike.com/doc/JAVA%5BJAVA%E5%BC%80%E5%8F%91%5D/a3_17_13_20300543897352146908130892747_jpg.html" target="_blank"><em></em>JAVA[JAVA开发]图册</a>
</div>
<div appcode="zhixiaoCard">
<link href="http://www.huimg.cn/hudong/entry/widget/renzheng/css/qy-product20171226.css" rel="stylesheet"/>
<div class="rz-product-card rightdiv">
<div class="simg">
<img alt="" src="http://static.hudong.com/07/15/26100000011122154216159245456.jpg"/>
</div>
<h3>JAVA[JAVA开发]</h3>
<ol>
<li>所属品牌：<a class="col-r" href="http://qiye.baike.com/wiki/杭州天眼教育咨询有限公司" target="_blank">杭州天眼教育咨询有限公司</a></li>
<li>上市时间：2018-11-11</li>
</ol>
<p class="a-c">
<a class="btn-blue" href="http://qiye.baike.com/wiki/杭州天眼教育咨询有限公司" target="_blank">前往企业词条</a>
<a class="btn-hui" href="http://www.zjoracle.com" target="_blank">更多资料</a>
</p>
<em class="gg-ico">广告</em>
</div>
</div>
<div class="rightdiv cooperation cooperation_t">
<h3>WIKI热度</h3>
<ol>
<li>编辑次数：<span>46次</span> <a href="http://www.baike.com/wikdoc/sp/qr/history/list.do?doc_title=JAVA%5BJAVA%E5%BC%80%E5%8F%91%5D&amp;prd=citiao_right_jibenxinxi_lishibanben" target="_blank">历史版本</a>
</li>
<li>参与编辑人数：<span>23</span>位</li>
<li>最近更新时间：2018-12-26 09:23:05</li>
</ol>
</div>
<div class="rightdiv gongxianbang">
<h3>贡献光荣榜</h3>
<a class="more" href="http://www.baike.com/wikdoc/sp/qr/history/editorlist.do?doc_title=JAVA%5BJAVA%E5%BC%80%E5%8F%91%5D&amp;prd=zhengwenye_left_jibenxinxi_xiezuozhe" target="_blank">更多</a><ul>
<li>创建者：<span><a class="yonghu" href="http://i.baike.com/profile.do?useriden=qf3EAAAgEA2B-e3F0&amp;prd=citiao_right_jibenxinxi_chuangjianzhe" target="_blank">cactus0509</a></span>
</li>
<li><h4><a class="yonghu" href="http://i.baike.com/profile.do?useriden=qfnEABQwAB2J-fnJ9&amp;prd=zhengwenye_zuixinxiezuozhe" uiden="qfnEABQwAB2J-fnJ9">冰封勿扰</a></h4></li>
<li><h4><a class="yonghu" href="http://i.baike.com/profile.do?useriden=fRBxfQEcEX0VZXhVG&amp;prd=zhengwenye_zuixinxiezuozhe" uiden="fRBxfQEcEX0VZXhVG">直升飞机</a></h4></li>
<li><h4><a class="yonghu" href="http://i.baike.com/profile.do?useriden=cRVoEW1UHW1RTDQFP&amp;prd=zhengwenye_zuixinxiezuozhe" uiden="cRVoEW1UHW1RTDQFP">厚学平台</a></h4></li>
<li><h4><a class="yonghu" href="http://i.baike.com/profile.do?useriden=jRANBCFgWB1dZB0NF&amp;prd=zhengwenye_zuixinxiezuozhe" uiden="jRANBCFgWB1dZB0NF">Aotumansm</a></h4></li>
<li><h4><a class="yonghu" href="http://i.baike.com/profile.do?useriden=SZXFncGF-VwFYUlRi&amp;prd=zhengwenye_zuixinxiezuozhe" uiden="SZXFncGF-VwFYUlRi">habojob</a></h4></li>
</ul>
</div>
<div class="rightdiv" id="map" style="display:none"><h3>地图</h3></div>
<div id="hd_ad_doc_16"> </div>
<div id="hd_ad_doc_1"> </div>
<div id="hd_ad_doc_23"> </div>
<div id="hd_ad_doc_24"> </div>
<div id="hd_ad_doc_31"> </div>
<div id="hd_ad_doc_133"> </div>
<div class="xgct rightdiv" id="xgct" name="xgct">
<h3>相关词条</h3>
<a action="perfectcordocbtn" class="more" href="javascript:void(0);" id="a_xgct" style="display:none">编辑</a><ul>
<li class="h105"><a href="http://so.baike.com/doc/C%E8%AF%AD%E8%A8%80&amp;prd=citiao_so" target="_blank" title="C语言"><span class="aimg" style="background-image:url(http://a4.att.hudong.com/85/83/50200009239445155793839574710_140.jpg);"><p></p></span>C语言</a></li>
<li class="h105"><a href="http://so.baike.com/doc/C%2B%2B&amp;prd=citiao_so" target="_blank" title="C++"><span class="aimg" style="background-image:url(http://a2.att.hudong.com/53/13/50200009239445155862132829168_140.jpg);"><p></p></span>C++</a></li>
<li class="h105"><a href="http://so.baike.com/doc/WEB%E5%BC%80%E5%8F%91&amp;prd=citiao_so" target="_blank" title="WEB开发"><span class="aimg" style="background-image:url(http://a0.att.hudong.com/82/95/20300543672649145611953142688_140.jpg);"><p></p></span>WEB开发</a></li>
<li class="h105"><a href="http://so.baike.com/doc/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80&amp;prd=citiao_so" target="_blank" title="编程语言"><span class="aimg" style="background-image:url(http://a4.att.hudong.com/84/77/50200009239445155795774095500_140.jpg);"><p></p></span>编程语言</a></li>
<li class="h105"><a href="http://so.baike.com/doc/C%23&amp;prd=citiao_so" target="_blank" title="C#"><span class="aimg" style="background-image:url(http://a4.att.hudong.com/85/83/50200009239445155793839574710_140.jpg);"><p></p></span>C#</a></li>
<li class="h105"><a href="http://so.baike.com/doc/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1&amp;prd=citiao_so" target="_blank" title="算法设计"><span class="aimg" style="background-image:url(http://a0.att.hudong.com/60/35/50200009239445155357354686578_140.jpg);"><p></p></span>算法设计</a></li>
</ul>
</div><div><iframe frameborder="0" height="370" marginheight="0" marginwidth="0" scrolling="no" src="//www.baike.com/shouye/reci/wiki1.html" width="270"></iframe></div>
<div class="yzct rightdiv">
<h3>分类热词</h3>
<div class="f_4">
<ul class="l">
<li><a href="http://so.baike.com/doc/c%E8%AF%AD%E8%A8%80&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">c语言</a></li>
<li><a href="http://so.baike.com/doc/TCL&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">TCL</a></li>
<li><a href="http://so.baike.com/doc/C&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">C</a></li>
<li><a href="http://so.baike.com/doc/MATLAB&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">MATLAB</a></li>
<li><a href="http://so.baike.com/doc/Erlang&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">Erlang</a></li>
</ul>
<ul class="r">
<li><a href="http://so.baike.com/doc/%E4%BB%A3%E7%A0%81&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">代码</a></li>
<li><a href="http://so.baike.com/doc/jdbc&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">jdbc</a></li>
<li><a href="http://so.baike.com/doc/JDBC&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">JDBC</a></li>
<li><a href="http://so.baike.com/doc/perl&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">perl</a></li>
<li><a href="http://so.baike.com/doc/servlet&amp;prd=citiao_so%0A%09%09%09%09%09%09%09" target="_blank">servlet</a></li>
</ul>
</div>
</div>
<div id="hd_ad_doc_5"> </div>
<div id="hd_ad_doc_25"> </div>
<div id="hd_ad_doc_26"> </div>
<div id="hd_ad_doc_17"> </div>
<div id="hd_ad_doc_18"> </div>
<div data-offset="245" data-toggle="fixed" data-top="34.1" data-top-ie6="-16" data-trigger="scrolltop" data-type="oncenter" id="hd_ad_doc_30"> </div>
<div id="hd_ad_doc_146"> </div>
<div class="rightdiv wap-citiao clearfix">
<style type="text/css">.wap-citiao{padding:10px;}.wap-citiao .fl{margin-top:5px;width:110px;font-size:12px;float:left;text-align: center;}.wap-citiao .fl img{display: block;width:60px;margin:0 auto;}.wap-citiao .fl p{color:#333;padding:6px 0;}.wap-citiao .fl span{color:#686868;}.wap-citiao .fr{float:right;}.wap-citiao .fr img{display: block;width:110px;height:110px;}</style>
<div class="fl">
<img src="//static.hudong.com/11/01/26100000006187151090019714114.png"/>
<p>互动百科</p>
<span>扫码下载APP</span>
</div>
<div class="fr" id="doc_qrcode">
</div>
</div>
</div>
</div>